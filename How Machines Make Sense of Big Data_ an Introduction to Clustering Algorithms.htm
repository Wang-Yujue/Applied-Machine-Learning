<!DOCTYPE html><html xmlns:cc="http://creativecommons.org/ns#"><head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# medium-com: http://ogp.me/ns/fb/medium-com#"><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><title>How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms</title><link rel="canonical" href="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba"><meta name="title" content="How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms"><meta name="referrer" content="unsafe-url"><meta name="description" content="Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize them by similarity into a number of groups. Done? While there…"><meta name="theme-color" content="#000000"><meta property="og:title" content="How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms"><meta property="og:url" content="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba"><meta property="og:image" content="https://cdn-images-1.medium.com/max/1200/1*Bm4uiBY1JEt6Z-vOme_fTQ.png"><meta property="fb:app_id" content="542599432471018"><meta property="og:description" content="Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize…"><meta name="twitter:description" content="Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize…"><meta name="twitter:image:src" content="https://cdn-images-1.medium.com/max/1200/1*Bm4uiBY1JEt6Z-vOme_fTQ.png"><link rel="publisher" href="https://plus.google.com/103654360130207659246"><link rel="author" href="https://medium.freecodecamp.org/@petergleeson1"><meta property="author" content="Peter Gleeson"><meta property="og:type" content="article"><meta name="twitter:card" content="summary_large_image"><meta property="article:publisher" content="https://www.facebook.com/freecodecamp"><meta property="article:author" content="https://medium.freecodecamp.org/@petergleeson1"><meta name="robots" content="index, follow"><meta property="article:published_time" content="2017-03-28T16:44:07.640Z"><meta name="twitter:site" content="@freecodecamp"><meta property="og:site_name" content="freeCodeCamp"><meta name="twitter:label1" value="Reading time"><meta name="twitter:data1" value="17 min read"><meta name="twitter:app:name:iphone" content="Medium"><meta name="twitter:app:id:iphone" content="828256236"><meta name="twitter:app:url:iphone" content="medium://p/4bd97d4fbaba"><meta property="al:ios:app_name" content="Medium"><meta property="al:ios:app_store_id" content="828256236"><meta property="al:android:package" content="com.medium.reader"><meta property="al:android:app_name" content="Medium"><meta property="al:ios:url" content="medium://p/4bd97d4fbaba"><meta property="al:android:url" content="medium://p/4bd97d4fbaba"><meta property="al:web:url" content="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba"><link rel="search" type="application/opensearchdescription+xml" title="Medium" href="/osd.xml" /><link rel="alternate" href="android-app://com.medium.reader/https/medium.com/p/4bd97d4fbaba" /><script type="application/ld+json">{"@context":"http://schema.org","@type":"NewsArticle","image":{"@type":"ImageObject","width":1085,"height":519,"url":"https://cdn-images-1.medium.com/max/2000/1*Bm4uiBY1JEt6Z-vOme_fTQ.png"},"datePublished":"2017-03-28T16:44:07.640Z","dateModified":"2018-03-06T13:15:30.241Z","headline":"How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms","name":"How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms","keywords":["Machine Learning","Data Science","Statistics","Technology","Artificial Intelligence"],"author":{"@type":"Person","name":"Peter Gleeson","url":"https://medium.freecodecamp.org/@petergleeson1"},"creator":["Peter Gleeson"],"publisher":{"@type":"Organization","name":"freeCodeCamp","url":"https://medium.freecodecamp.org","logo":{"@type":"ImageObject","width":500,"height":60,"url":"https://cdn-images-1.medium.com/max/1000/1*wViBNJ1o9rM5p6b-gf3vxg.png"}},"mainEntityOfPage":"https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba"}</script><link rel="stylesheet" type="text/css" id="glyph-8" href="https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m2.css" /><link rel="stylesheet" href="https://cdn-static-1.medium.com/_/fp/css/main-branding-base.YGq0E2Ct2wmD-w5ky3Dl9A.css"><script>if (window.top !== window.self) window.top.location = window.self.location.href;var OB_startTime = new Date().getTime(); var OB_loadErrors = []; function _onerror(e) { OB_loadErrors.push(e) }; if (document.addEventListener) document.addEventListener("error", _onerror, true); else if (document.attachEvent) document.attachEvent("onerror", _onerror); function _asyncScript(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("script"); s.type = "text/javascript"; s.async = true; s.src = u; f.parentNode.insertBefore(s, f);}function _asyncStyles(u) {var d = document, f = d.getElementsByTagName("script")[0], s = d.createElement("link"); s.rel = "stylesheet"; s.href = u; f.parentNode.insertBefore(s, f); return s}(new Image()).src = "/_/stat?event=pixel.load&origin=" + encodeURIComponent(location.origin);</script><script>window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date; ga("create", "UA-24232453-2", "auto", {"allowLinker": true, "legacyCookieDomain": window.location.hostname}); ga("send", "pageview");ga("create", "UA-55446531-3", "auto", 'tracker0'); ga("tracker0.send", "pageview");</script><script async src="https://www.google-analytics.com/analytics.js"></script><!--[if lt IE 9]><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js"></script><![endif]--><link rel="icon" href="https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico" class="js-favicon"><link rel="apple-touch-icon" sizes="152x152" href="https://cdn-images-1.medium.com/fit/c/304/304/1*MotlWcSa2n6FrOx3ul89kw.png"><link rel="apple-touch-icon" sizes="120x120" href="https://cdn-images-1.medium.com/fit/c/240/240/1*MotlWcSa2n6FrOx3ul89kw.png"><link rel="apple-touch-icon" sizes="76x76" href="https://cdn-images-1.medium.com/fit/c/152/152/1*MotlWcSa2n6FrOx3ul89kw.png"><link rel="apple-touch-icon" sizes="60x60" href="https://cdn-images-1.medium.com/fit/c/120/120/1*MotlWcSa2n6FrOx3ul89kw.png"><link rel="mask-icon" href="https://cdn-static-1.medium.com/_/fp/icons/monogram-mask.KPLCSFEZviQN0jQ7veN2RQ.svg" color="#171717"></head><body itemscope class=" postShowScreen browser-chrome os-mac is-withMagicUnderlines v-glyph v-glyph--m2 v-enableBrandingButtons is-noJs"><script>document.body.className = document.body.className.replace(/(^|\s)is-noJs(\s|$)/, "$1is-js$2")</script><div class="site-main" id="container"><div class="butterBar butterBar--error"></div><div class="surface"><div id="prerendered" class="screenContent"><canvas class="canvas-renderer"></canvas><div class="container u-maxWidth740 u-xs-margin0 notesPositionContainer js-notesPositionContainer"></div><div class="metabar u-clearfix js-metabar u-textColorTransparentWhiteDarker u-fixed u-backgroundTransparentWhiteDarkest u-xs-sizeFullViewportWidth u-tintBgColor u-tintSpectrum"><div class="js-metabarMiddle metabar-inner u-marginAuto u-maxWidth1000 u-flexCenter u-justifyContentSpaceBetween u-height65 u-xs-height56 u-paddingLeft20 u-paddingRight20"><div class="metabar-block u-flex1  u-flexCenter"><div class="js-metabarLogoLeft"><a href="https://medium.com/" data-log-event="home" class="siteNav-logo u-flexCenter u-paddingTop0"><span class="svgIcon svgIcon--logoMonogram svgIcon--45px is-flushLeft u-textColorDarker"><svg class="svgIcon-use" width="45" height="45" viewBox="0 0 45 45" ><path d="M5 40V5h35v35H5zm8.56-12.627c0 .555-.027.687-.318 1.03l-2.457 2.985v.396h6.974v-.396l-2.456-2.985c-.291-.343-.344-.502-.344-1.03V18.42l6.127 13.364h.714l5.256-13.364v10.644c0 .29 0 .342-.185.528l-1.848 1.796v.396h9.19v-.396l-1.822-1.796c-.184-.186-.21-.238-.21-.528V15.937c0-.291.026-.344.21-.528l1.823-1.797v-.396h-6.471l-4.622 11.542-5.203-11.542h-6.79v.396l2.14 2.64c.239.292.291.37.291.768v10.353z"/></svg></span><span class="u-textScreenReader">Homepage</span></a></div><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56"><div class="u-alignBlock"><span class="u-inlineBlock u-height28 u-xs-height24 u-verticalAlignTop u-marginRight20 u-marginLeft15 u-borderRightTransparentWhiteLighter"></span></div></div><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-marginRight18"><div class="u-alignBlock"><a class="js-collectionLogoOrName" href="https://medium.freecodecamp.org?source=logo-lo_ORScxfT4HOgt---336d898217ee"><img height="36" width="300" class="u-paddingTop5" src="https://cdn-images-1.medium.com/letterbox/600/72/50/50/1*wViBNJ1o9rM5p6b-gf3vxg.png?source=logoAvatar-lo_ORScxfT4HOgt---336d898217ee" alt="freeCodeCamp" /></a></div></div><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56 u-xs-hide"><div class="u-alignBlock"><div class="buttonSet"><button class="button button--primary button--smallest u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton is-smallPill"  data-action="sign-up-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/free-code-camp" data-action-source="----336d898217ee----------------------follow_header" data-collection-id="336d898217ee"><span class="button-label  js-buttonLabel">Follow</span></button><a class="button button--light button--chromeless is-touchIconBlackPulse u-baseColor--buttonLight button--withIcon button--withSvgIcon"   href="https://twitter.com/freecodecamp" title="Visit “freeCodeCamp” on Twitter" aria-label="Visit “freeCodeCamp” on Twitter" rel="me" target="_blank"><span class="button-defaultState"><span class="svgIcon svgIcon--twitterFilled svgIcon--25px"><svg class="svgIcon-use" width="25" height="25" viewBox="0 0 25 25" ><path d="M21.725 5.338c-.744.47-1.605.804-2.513 1.006a3.978 3.978 0 0 0-2.942-1.293c-2.22 0-4.02 1.81-4.02 4.02 0 .32.034.63.07.94-3.31-.18-6.27-1.78-8.255-4.23a4.544 4.544 0 0 0-.574 2.01c.04 1.43.74 2.66 1.8 3.38-.63-.01-1.25-.19-1.79-.5v.08c0 1.93 1.38 3.56 3.23 3.95-.34.07-.7.12-1.07.14-.25-.02-.5-.04-.72-.07.49 1.58 1.97 2.74 3.74 2.8a8.49 8.49 0 0 1-5.02 1.72c-.3-.03-.62-.04-.93-.07A11.447 11.447 0 0 0 8.88 21c7.386 0 11.43-6.13 11.414-11.414.015-.21.01-.38 0-.578a7.604 7.604 0 0 0 2.01-2.08 7.27 7.27 0 0 1-2.297.645 3.856 3.856 0 0 0 1.72-2.23"/></svg></span></span></a><a class="button button--light button--chromeless is-touchIconBlackPulse u-baseColor--buttonLight button--withIcon button--withSvgIcon u-paddingLeft0"   href="//facebook.com/freecodecamp" title="Visit “freeCodeCamp” on Facebook" aria-label="Visit “freeCodeCamp” on Facebook" rel="me" target="_blank"><span class="button-defaultState"><span class="svgIcon svgIcon--facebookFilled svgIcon--25px"><svg class="svgIcon-use" width="25" height="25" viewBox="0 0 25 25" ><path d="M21 12.646C21 7.65 16.97 3.6 12 3.6s-9 4.05-9 9.046a9.026 9.026 0 0 0 7.59 8.924v-6.376H8.395V12.64h2.193v-1.88c0-2.186 1.328-3.375 3.267-3.375.93 0 1.728.07 1.96.1V9.77H14.47c-1.055 0-1.26.503-1.26 1.242v1.63h2.517l-.33 2.554H13.21V21.6c4.398-.597 7.79-4.373 7.79-8.954"/></svg></span></span></a></div></div></div></div><div class="metabar-block u-flex0 u-flexCenter"><div class="u-alignMiddle u-inlineBlock u-verticalAlignTop u-height65 u-xs-height56"><div class="u-alignBlock"><div class="buttonSet buttonSet--wide u-lineHeightInherit"><a class="button button--primary button--light button--chromeless u-accentColor--buttonNormal is-inSiteNavBar u-xs-hide js-signInButton"   href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.freecodecamp.org%2Fhow-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba&amp;source=--------------------------nav_reg&amp;operation=login" data-action="sign-in-prompt" data-redirect="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba" data-action-source="--------------------------nav_reg">Sign in</a><a class="button button--primary button--light button--withChrome u-accentColor--buttonNormal is-inSiteNavBar js-signUpButton"   href="https://medium.com/m/signin?redirect=https%3A%2F%2Fmedium.freecodecamp.org%2Fhow-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba&amp;source=--------------------------nav_reg&amp;operation=register" data-action="sign-up-prompt" data-redirect="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba" data-action-source="--------------------------nav_reg">Get started</a></div></div></div></div></div><div class="metabar-inner u-marginAuto u-maxWidth1000 js-metabarBottom"><nav role="navigation" class="metabar-block metabar-block--below u-overflowHidden u-height44"><ul class="u-textAlignLeft u-noWrap u-overflowX u-paddingBottom100 u-sm-paddingLeft20 u-sm-paddingRight20 js-collectionNavItems"><li class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken u-baseColor--link js-homeNav"   href="https://medium.freecodecamp.org">Home</a></li><li class="metabar-navItem js-collectionNavItem  u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken link--noUnderline u-baseColor--link js-navItemLink"   href="https://medium.freecodecamp.org/tagged/web-development">Dev</a></li><li class="metabar-navItem js-collectionNavItem  u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken link--noUnderline u-baseColor--link js-navItemLink"   href="https://medium.freecodecamp.org/tagged/design">Design</a></li><li class="metabar-navItem js-collectionNavItem  u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darken u-accentColor--textDarken link--noUnderline u-baseColor--link js-navItemLink"   href="https://medium.freecodecamp.org/tagged/data-science">Data</a></li><span class="u-borderLeft1 u-paddingLeft12 u-baseColor--borderLight"></span><li class="metabar-navItem js-collectionNavItem  u-paddingLeft0 is-external u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="link link--darkenOnHover u-accentColor--textDarken link--noUnderline u-baseColor--link js-navItemLink"   href="https://freecodecamp.com?ref=mn" rel="nofollow noopener" target="_blank">Learn to code for free</a></li><li class="metabar-navItem js-collectionNavItem u-uiTextMedium u-fontSize14 u-inlineBlock u-textUppercase u-letterSpacing003 u-textColorNormal u-xs-paddingRight12 u-xs-marginRight0 u-paddingTop5 u-xs-paddingTop10"><a class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-top1"   href="https://medium.freecodecamp.org/search" title="Search" aria-label="Search"><span class="button-defaultState"><span class="svgIcon svgIcon--search svgIcon--25px"><svg class="svgIcon-use" width="25" height="25"  viewBox="0 0 25 25"><path d="M20.067 18.933l-4.157-4.157a6 6 0 1 0-.884.884l4.157 4.157a.624.624 0 1 0 .884-.884zM6.5 11c0-2.62 2.13-4.75 4.75-4.75S16 8.38 16 11s-2.13 4.75-4.75 4.75S6.5 13.62 6.5 11z"/></svg></span></span></a></li></ul></nav></div></div><div class="metabar metabar--spacer js-metabarSpacer u-tintBgColor  u-height105 u-xs-height95"></div><main role="main"><article class=" u-minHeight100vhOffset65 u-overflowHidden postArticle postArticle--full is-withAccentColors u-marginBottom40"  lang="en"><header class="container u-maxWidth740"><div class="uiScale uiScale-ui--regular uiScale-caption--regular postMetaHeader u-paddingBottom10 row"><div class="col u-size12of12 js-postMetaLockup"><div class="uiScale uiScale-ui--regular uiScale-caption--regular postMetaLockup postMetaLockup--authorWithBio u-flexCenter js-postMetaLockup"><div class="u-flex0"><a class="link u-baseColor--link avatar"   href="https://medium.freecodecamp.org/@petergleeson1?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="536515a4b25d" data-action-type="hover" data-user-id="536515a4b25d" data-collection-slug="free-code-camp" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/120/120/1*jYH_43uKbwiZhfXddHE1BQ.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Peter Gleeson"></a></div><div class="u-flex1 u-paddingLeft15 u-overflowHidden"><div class="u-lineHeightTightest"><a class="ds-link ds-link--styleSubtle ui-captionStrong u-inlineBlock link link--darken link--darker"   href="https://medium.freecodecamp.org/@petergleeson1?source=post_header_lockup" data-action="show-user-card" data-action-source="post_header_lockup" data-action-value="536515a4b25d" data-action-type="hover" data-user-id="536515a4b25d" data-collection-slug="free-code-camp" dir="auto">Peter Gleeson</a><span class="followState js-followState" data-user-id="536515a4b25d"><button class="button button--smallest u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton u-marginLeft10 u-xs-hide"  data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba" data-action-source="post_header_lockup"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--smallest u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton u-marginLeft10 u-xs-hide"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/536515a4b25d" data-action-source="post_header_lockup-536515a4b25d-------------------------follow_byline"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="ui-caption ui-xs-clamp2 postMetaInline">Writer on topics in data science, statistics and programming</div><div class="ui-caption postMetaInline js-testPostMetaInlineSupplemental"><time datetime="2017-03-28T16:44:07.640Z">Mar 28, 2017</time><span class="middotDivider u-fontSize12"></span><span class="readingTime" title="17 min read"></span></div></div></div></div></div></header><div class="postArticle-content js-postField js-notesSource js-trackedPost"  data-post-id="4bd97d4fbaba" data-source="post_page" data-collection-id="336d898217ee" data-tracking-context="postPage"><section name="8cd0" class="section section--body section--first section--last"><div class="section-divider"><hr class="section-divider"></div><div class="section-content"><div class="section-inner sectionLayout--insetColumn"><h1 name="0dcc" id="0dcc" class="graf graf--h3 graf--leading graf--title">How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms</h1></div><div class="section-inner sectionLayout--fullWidth"><figure name="a5ea" id="a5ea" class="graf graf--figure graf--layoutFillWidth graf-after--h3"><div class="aspectRatioPlaceholder is-locked"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 57.599999999999994%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*dT8VX9g8ig6lxmobTRmCiA.jpeg" data-width="3892" data-height="2242"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*dT8VX9g8ig6lxmobTRmCiA.jpeg?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/2000/1*dT8VX9g8ig6lxmobTRmCiA.jpeg"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/2000/1*dT8VX9g8ig6lxmobTRmCiA.jpeg"></noscript></div></div></figure></div><div class="section-inner sectionLayout--insetColumn"><p name="3329" id="3329" class="graf graf--p graf-after--figure">Take a look at the image below. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize them by similarity into a number of groups.</p><p name="941a" id="941a" class="graf graf--p graf-after--p">This isn’t a trick question. Start with grouping the spiders together.</p></div><div class="section-inner sectionLayout--outsetColumn"><figure name="f1a2" id="f1a2" class="graf graf--figure graf--layoutOutsetCenter graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 1000px; max-height: 478px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 47.8%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*Bm4uiBY1JEt6Z-vOme_fTQ.png" data-width="1085" data-height="519" data-is-featured="true" data-action="zoom" data-action-value="1*Bm4uiBY1JEt6Z-vOme_fTQ.png"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*Bm4uiBY1JEt6Z-vOme_fTQ.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/2000/1*Bm4uiBY1JEt6Z-vOme_fTQ.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/2000/1*Bm4uiBY1JEt6Z-vOme_fTQ.png"></noscript></div></div><figcaption class="imageCaption">Images via Google Image Search, labelled for reuse</figcaption></figure></div><div class="section-inner sectionLayout--insetColumn"><p name="2fa8" id="2fa8" class="graf graf--p graf-after--figure">Done? While there’s not necessarily a “correct” answer here, it’s most likely you split the bugs into four <em class="markup--em markup--p-em">clusters</em>. The spiders in one cluster, the pair of snails in another, the butterflies and moth into one, and the trio of wasps and bees into one more.</p><p name="3c8e" id="3c8e" class="graf graf--p graf-after--p">That wasn’t too bad, was it? You could probably do the same with twice as many bugs, right? If you had a bit of time to spare — or a passion for entomology — you could probably even do the same with a hundred bugs.</p><p name="376c" id="376c" class="graf graf--p graf-after--p">For a machine though, grouping ten objects into however many meaningful clusters is no small task, thanks to a mind-bending branch of maths called <a href="https://en.wikipedia.org/wiki/Bell_number" data-href="https://en.wikipedia.org/wiki/Bell_number" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">combinatorics</a>, which tells us that are 115,975 different possible ways you could have grouped those ten insects together. Had there been twenty bugs, there would have been <a href="https://www.wolframalpha.com/input/?i=bell%27s+number+%2820%29" data-href="https://www.wolframalpha.com/input/?i=bell%27s+number+(20)" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">over fifty trillion</a> possible ways of clustering them.</p><p name="2d04" id="2d04" class="graf graf--p graf-after--p">With a hundred bugs — there’d be many times more solutions than there are <a href="https://www.wolframalpha.com/input/?i=particles+in+universe" data-href="https://www.wolframalpha.com/input/?i=particles+in+universe" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">particles in the known universe</a>. How many times more? By my calculation, approximately <a href="https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+number+of+particles+in+universe" data-href="https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+number+of+particles+in+universe" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">five hundred million billion billion times more</a>. In fact, there are more than <a href="https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+googol" data-href="https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+googol" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">four million billion <em class="markup--em markup--p-em">googol</em></a> solutions (<a href="https://www.wolframalpha.com/input/?i=googol" data-href="https://www.wolframalpha.com/input/?i=googol" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">what’s a googol?</a>). For just a hundred objects.</p><p name="4152" id="4152" class="graf graf--p graf-after--p">Almost all of those solutions would be meaningless — yet from that unimaginable number of possible choices, you pretty quickly found one of the very few that clustered the bugs in a useful way.</p><p name="93b1" id="93b1" class="graf graf--p graf-after--p">Us humans take it for granted how good we are categorizing and making sense of large volumes of data pretty quickly. Whether it’s a paragraph of text, or images on a screen, or a sequence of objects — humans are generally fairly efficient at making sense of whatever data the world throws at us.</p><p name="64d2" id="64d2" class="graf graf--p graf-after--p">Given that a key aspect of developing A.I. and Machine Learning is getting machines to quickly make sense of large sets of input data, what shortcuts are there available? Here, you can read about three clustering algorithms that machines can use to quickly make sense of large datasets. This is by no means an exhaustive list — there are other algorithms out there — but they represent a good place to start!</p><p name="f64e" id="f64e" class="graf graf--p graf-after--p">You’ll find for each a quick summary of when you might use them, a brief overview of how they work, and a more detailed, step-by-step worked example. I believe it helps to understand an algorithm by actually carrying out yourself. If you’re <em class="markup--em markup--p-em">really keen</em>, you’ll find the best way to do this is with pen and paper. Go ahead — nobody will judge!</p><figure name="2386" id="2386" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 460px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 65.8%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*4asJtK2DB-rdoMxNMWyrZw.png" data-width="1180" data-height="776" data-action="zoom" data-action-value="1*4asJtK2DB-rdoMxNMWyrZw.png"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*4asJtK2DB-rdoMxNMWyrZw.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*4asJtK2DB-rdoMxNMWyrZw.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*4asJtK2DB-rdoMxNMWyrZw.png"></noscript></div></div><figcaption class="imageCaption">Three suspiciously neat clusters, with K = 3</figcaption></figure><h3 name="c662" id="c662" class="graf graf--h3 graf-after--figure">K-means clustering</h3><h4 name="cf9b" id="cf9b" class="graf graf--h4 graf-after--h3"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Use when:</em></strong></h4><p name="bbf1" id="bbf1" class="graf graf--p graf-after--h4">…you have an idea of how many groups you’re expecting to find <em class="markup--em markup--p-em">a priori</em>.</p><h4 name="71dc" id="71dc" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">How it works:</em></strong></h4><p name="ad35" id="ad35" class="graf graf--p graf-after--h4">The algorithm randomly assigns each observation into one of <em class="markup--em markup--p-em">k </em>categories, then calculates the <em class="markup--em markup--p-em">mean</em> of each category. Next, it reassigns each observation to the category with the closest mean before recalculating the means. This step repeats over and over until no more reassignments are necessary.</p><h4 name="6699" id="6699" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Worked Example:</em></strong></h4><p name="cd33" id="cd33" class="graf graf--p graf-after--h4">Take a group of 12 football (or ‘soccer’) players who have each scored a certain number of goals this season (say in the range 3–30). Let’s divide them into separate clusters — say three.</p><p name="597a" id="597a" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 1 </strong>requires us to randomly split the players into three groups and calculate the means of each.</p><pre name="8aeb" id="8aeb" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">Group 1<br></strong>Player A (5 goals), Player B (20 goals), Player C (11 goals) <br><strong class="markup--strong markup--pre-strong">Group Mean = (5 + 20 + 11) / 3 = 12</strong></pre><pre name="b753" id="b753" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 2<br></strong>Player D (5 goals), Player E (3 goals), Player F (19 goals)<br><strong class="markup--strong markup--pre-strong">Group Mean = 9</strong></pre><pre name="37d3" id="37d3" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 3<br></strong>Player G (30 goals), Player H (3 goals), Player I (15 goals)<br><strong class="markup--strong markup--pre-strong">Group Mean = 16</strong></pre><p name="e597" id="e597" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Step 2: </strong>For each player, reassign them to the group with the closest mean. E.g., Player A (5 goals) is assigned to Group 2 (mean = 9). Then recalculate the group means.</p><pre name="7025" id="7025" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">Group 1 (Old Mean = 12)<br></strong>Player C (11 goals) <br><strong class="markup--strong markup--pre-strong">New Mean = 11</strong></pre><pre name="eb82" id="eb82" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 2 (Old Mean = 9)<br></strong>Player A (5 goals), Player D (5 goals), Player E (3 goals), Player H (3 goals)<br><strong class="markup--strong markup--pre-strong">New Mean = 4</strong></pre><pre name="7542" id="7542" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 3 (Old Mean = 16)<br></strong>Player G (30 goals), Player I (15 goals), Player B (20 goals), Player F (19 goals)<br><strong class="markup--strong markup--pre-strong">New Mean = 21</strong></pre><p name="dbda" id="dbda" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Repeat</strong> Step 2 over and over until the group means no longer change. For this somewhat contrived example, this happens on the next iteration. <strong class="markup--strong markup--p-strong">Stop!</strong> You have now formed three clusters from the dataset!</p><pre name="b6c7" id="b6c7" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">Group 1 (Old Mean = 11)<br></strong>Player C (11 goals), Player I (15 goals)<br><strong class="markup--strong markup--pre-strong">Final Mean = 13</strong></pre><pre name="d3b7" id="d3b7" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 2 (Old Mean = 4)<br></strong>Player A (5 goals), Player D (5 goals), Player E (3 goals), Player H (3 goals)<br><strong class="markup--strong markup--pre-strong">Final Mean = 4</strong></pre><pre name="d581" id="d581" class="graf graf--pre graf-after--pre"><strong class="markup--strong markup--pre-strong">Group 3 (Old Mean = 21)<br></strong>Player G (30 goals), Player B (20 goals), Player F (19 goals)<br><strong class="markup--strong markup--pre-strong">Final Mean = 23</strong></pre><p name="8b03" id="8b03" class="graf graf--p graf-after--pre">With this example, the clusters could correspond to the players’ positions on the field — such as defenders, midfielders and attackers. K-means works here because we could have reasonably expected the data to fall naturally into these three categories.</p><p name="300f" id="300f" class="graf graf--p graf-after--p">In this way, given data on a range of performance statistics, a machine could do a reasonable job of estimating the positions of players from any team sport — useful for sports analytics, and indeed any other purpose where classification of a dataset into predefined groups can provide relevant insights.</p><h4 name="27e9" id="27e9" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Finer details:</em></strong></h4><p name="7aa0" id="7aa0" class="graf graf--p graf-after--h4">There are several variations on the algorithm described here. The initial method of ‘seeding’ the clusters can be done in one of several ways. Here, we randomly assigned every player into a group, then calculated the group means. This causes the initial group means to tend towards being similar to one another, which ensures greater repeatability.</p><p name="0e60" id="0e60" class="graf graf--p graf-after--p">An alternative is to seed the clusters with just one player each, then start assigning players to the nearest cluster. The returned clusters are more sensitive to the initial seeding step, reducing repeatability in highly variable datasets. However, this approach may reduce the number of iterations required to complete the algorithm, as the groups will take less time to diverge.</p><p name="bd3d" id="bd3d" class="graf graf--p graf-after--p">An obvious limitation to K-means clustering is that you have to provide <em class="markup--em markup--p-em">a priori</em> assumptions about how many clusters you’re expecting to find. There are methods to assess the fit of a particular set of clusters. For example, the <em class="markup--em markup--p-em">Within-Cluster </em><a href="https://en.wikipedia.org/wiki/Partition_of_sums_of_squares" data-href="https://en.wikipedia.org/wiki/Partition_of_sums_of_squares" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"><em class="markup--em markup--p-em">Sum-of-Squares</em></a> is a measure of the variance within each cluster. The ‘better’ the clusters, the lower the overall WCSS.</p><h3 name="acbe" id="acbe" class="graf graf--h3 graf-after--p">Hierarchical clustering</h3><h4 name="1eb8" id="1eb8" class="graf graf--h4 graf-after--h3"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Use when:</em></strong></h4><p name="26af" id="26af" class="graf graf--p graf-after--h4">…you wish to uncover the underlying relationships between your observations.</p><h4 name="a79b" id="a79b" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">How it works:</em></strong></h4><p name="6625" id="6625" class="graf graf--p graf-after--h4">A distance matrix is computed, where the value of cell (<em class="markup--em markup--p-em">i, j) </em>is a distance metric between observations <em class="markup--em markup--p-em">i </em>and <em class="markup--em markup--p-em">j</em>. Then, pair the closest two observations and calculate their average. Form a new distance matrix, merging the paired observations into a single object. From this distance matrix, pair up the closest two observations and calculate their average. Repeat until all observations are grouped together.</p><h4 name="5028" id="5028" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Worked example</em></strong>:</h4><p name="6bb0" id="6bb0" class="graf graf--p graf-after--h4">Here’s a super-simplified dataset about a selection of whale and dolphin species. As a trained biologist, I can assure you we normally use much more detailed datasets for things like <a href="https://en.wikipedia.org/wiki/Phylogenetic_tree" data-href="https://en.wikipedia.org/wiki/Phylogenetic_tree" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">reconstructing phylogeny</a>. For now though, we’ll just look at the typical body lengths for these six species. We’ll be using just two repeated steps.</p><pre name="fa19" id="fa19" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">Species          Initials  Length(m)</strong><br>Bottlenose Dolphin     BD        3.0<br>Risso&#39;s Dolphin        RD        3.6<br>Pilot Whale            PW        6.5<br>Killer Whale           KW        7.5<br>Humpback Whale         HW       15.0<br>Fin Whale              FW       20.0</pre><p name="0611" id="0611" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Step 1: </strong>compute a distance matrix between each species. Here, we’ll use the <a href="https://en.wikipedia.org/wiki/Euclidean_distance" data-href="https://en.wikipedia.org/wiki/Euclidean_distance" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Euclidean distance </a>— how far apart are the data points? Read this exactly as you would a distance chart in a road atlas. The difference in length between any pair of species can be looked up by reading the value at the intersection of the relevant row and column.</p><pre name="68e7" id="68e7" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">    BD   RD   PW   KW   HW</strong><br><strong class="markup--strong markup--pre-strong">RD </strong> 0.6                    <br><strong class="markup--strong markup--pre-strong">PW </strong> 3.5  2.9               <br><strong class="markup--strong markup--pre-strong">KW </strong> 4.5  3.9  1.0          <br><strong class="markup--strong markup--pre-strong">HW </strong>12.0 11.4  8.5  7.5     <br><strong class="markup--strong markup--pre-strong">FW </strong>17.0 16.4 13.5 12.5  5.0</pre><p name="7109" id="7109" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Step 2: </strong>Pair up the two closest species. Here, this will be the Bottlenose &amp; Risso’s Dolphins, with an average length of 3.3m.</p><p name="d409" id="d409" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Repeat</strong> Step 1 by recalculating the distance matrix, but this time merge the Bottlenose &amp; Risso’s Dolphins into a single object with length 3.3m.</p><pre name="4cbb" id="4cbb" class="graf graf--pre graf-after--p">    <strong class="markup--strong markup--pre-strong">[BD, RD]   PW   KW   HW</strong><br><strong class="markup--strong markup--pre-strong">PW</strong>       3.2               <br><strong class="markup--strong markup--pre-strong">KW</strong>       4.2   1.0          <br><strong class="markup--strong markup--pre-strong">HW</strong>      11.7   8.5  7.5     <br><strong class="markup--strong markup--pre-strong">FW</strong>      16.7  13.5 12.5  5.0</pre><p name="77af" id="77af" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Next</strong>, repeat Step 2 with this new distance matrix. Here, the smallest distance is between the Pilot &amp; Killer Whales, so we pair them up and take their average — which gives us 7.0m.</p><p name="047f" id="047f" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Then</strong>, we repeat Step 1 — recalculate the distance matrix, but now we’ve merged the Pilot &amp; Killer Whales into a single object of length 7.0m.</p><pre name="8e34" id="8e34" class="graf graf--pre graf-after--p">         <strong class="markup--strong markup--pre-strong">[BD, RD] [PW, KW]   HW</strong><br><strong class="markup--strong markup--pre-strong">[PW, KW]</strong>      3.7              <br><strong class="markup--strong markup--pre-strong">HW</strong>           11.7      8.0     <br><strong class="markup--strong markup--pre-strong">FW</strong>           16.7     13.0   5.0</pre><p name="da48" id="da48" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Next</strong>, we repeat Step 2 with this distance matrix. The smallest distance (3.7m) is between the two merged objects — so now we merge them into an even bigger object, and take the average (which is 5.2m).</p><p name="d16c" id="d16c" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Then</strong>, we repeat Step 1 and compute a new distance matrix, having merged the Bottlenose &amp; Risso’s Dolphins with the Pilot &amp; Killer Whales.</p><pre name="0a32" id="0a32" class="graf graf--pre graf-after--p">   <strong class="markup--strong markup--pre-strong">[[BD, RD] , [PW, KW]]    HW</strong><br><strong class="markup--strong markup--pre-strong">HW </strong>                  9.8    <br><strong class="markup--strong markup--pre-strong">FW</strong>                  14.8   5.0</pre><p name="cf09" id="cf09" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Next</strong>, we repeat Step 2. The smallest distance (5.0m) is between the Humpback &amp; Fin Whales, so we merge them into a single object, and take the average (17.5m).</p><p name="a88d" id="a88d" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Then</strong>, it’s back to Step 1 — compute the distance matrix, having merged the Humpback &amp; Fin Whales.</p><pre name="c60d" id="c60d" class="graf graf--pre graf-after--p">         <strong class="markup--strong markup--pre-strong">[[BD, RD] , [PW, KW]]</strong><br><strong class="markup--strong markup--pre-strong">[HW, FW]</strong>                  12.3</pre><p name="3ec3" id="3ec3" class="graf graf--p graf-after--pre"><strong class="markup--strong markup--p-strong">Finally,</strong> we repeat Step 2 — there is only one distance (12.3m) in this matrix, so we pair everything into one big object, and now we can <strong class="markup--strong markup--p-strong">stop!</strong> Let’s look at the final merged object:</p><pre name="5548" id="5548" class="graf graf--pre graf-after--p">[[[BD, RD],[PW, KW]],[HW, FW]]</pre><p name="3fa2" id="3fa2" class="graf graf--p graf-after--pre">It has a nested structure (think <a href="http://json.org/example.html" data-href="http://json.org/example.html" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">JSON</a>), which allows it to be drawn up as a tree-like graph, or <em class="markup--em markup--p-em">dendrogram</em>. It reads in much the same way a family tree might. The nearer two observations are on the tree, the more similar or closely-related they are taken to be.</p><figure name="a48d" id="a48d" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 480px; max-height: 480px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 100%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*jwd6EHmjOtkH9RiQSJ_ZnQ.png" data-width="480" data-height="480"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*jwd6EHmjOtkH9RiQSJ_ZnQ.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*jwd6EHmjOtkH9RiQSJ_ZnQ.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*jwd6EHmjOtkH9RiQSJ_ZnQ.png"></noscript></div></div><figcaption class="imageCaption">A no-frills dendrogram generated at <a href="http://www.r-fiddle.org/#" data-href="http://www.r-fiddle.org/#" class="markup--anchor markup--figure-anchor" rel="noopener" target="_blank">R-Fiddle.org</a></figcaption></figure><p name="e2dc" id="e2dc" class="graf graf--p graf-after--figure">The structure of the dendrogram gives us insight into how our dataset is structured. In our example, we see two main branches, with Humpback Whale and Fin Whale on one side, and the Bottlenose Dolphin/Risso’s Dolphin and Pilot Whale/Killer Whale on the other.</p><p name="5b08" id="5b08" class="graf graf--p graf-after--p">In evolutionary biology, much larger datasets with many more specimens and measurements are used in this way to infer taxonomic relationships between them. Outside of biology, hierarchical clustering has applications in Data Mining and Machine Learning contexts.</p><p name="a111" id="a111" class="graf graf--p graf-after--p">The cool thing is that this approach requires no assumptions about the number of clusters you’re looking for. You can split the returned dendrogram into clusters by “cutting” the tree at a given height. This height can be chosen in a number of ways, depending on the resolution at which you wish to cluster the data.</p><p name="c890" id="c890" class="graf graf--p graf-after--p">For instance, looking at the dendrogram above, if we draw a horizontal line at height = 10, we’d intersect the two main branches, splitting the dendrogram into two sub-graphs. If we cut at height = 2, we’d be splitting the dendrogram into three clusters.</p><h4 name="acf8" id="acf8" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Finer details:</em></strong></h4><p name="a2ce" id="a2ce" class="graf graf--p graf-after--h4">There are essentially three aspects in which hierarchical clustering algorithms can vary to the one given here.</p><p name="bce7" id="bce7" class="graf graf--p graf-after--p">Most fundamental is the approach — here, we have used an <em class="markup--em markup--p-em">agglomerative</em> process, whereby we start with individual data points and iteratively cluster them together until we’re left with one large cluster. An alternative (but more computationally intensive) approach is to start with one giant cluster, and then proceed to divide the data into smaller and smaller clusters until you’re left with isolated data points.</p><p name="acac" id="acac" class="graf graf--p graf-after--p">There are also a range of methods that can be used to calculate the distance matrices. For many purposes, the Euclidean distance (think Pythagoras’ Theorem) will suffice, but there are <a href="https://en.wikipedia.org/wiki/Metric_%28mathematics%29" data-href="https://en.wikipedia.org/wiki/Metric_(mathematics)" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">alternatives</a> that may be more applicable in some circumstances.</p><p name="c65b" id="c65b" class="graf graf--p graf-after--p">Finally, the <em class="markup--em markup--p-em">linkage criterion</em> can also vary. Clusters are linked according to how close they are to one another, but the way in which we define ‘close’ is flexible. In the example above, we measured the distances between the means (or ‘centroids’) of each group and paired up the nearest groups. However, you may want to use a different definition.</p><p name="4ba3" id="4ba3" class="graf graf--p graf-after--p">For example, each cluster is made up of several discrete points. We could define the distance between two clusters to be the minimum (or maximum) distance between any of their points — as illustrated in the figure below. There are still other ways of defining the linkage criterion, which may be suitable in different contexts.</p><figure name="170b" id="170b" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 392px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 56.10000000000001%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*4aWCKqBrD8BbEeiNzc2gwg.png" data-width="1156" data-height="648" data-action="zoom" data-action-value="1*4aWCKqBrD8BbEeiNzc2gwg.png"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*4aWCKqBrD8BbEeiNzc2gwg.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*4aWCKqBrD8BbEeiNzc2gwg.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*4aWCKqBrD8BbEeiNzc2gwg.png"></noscript></div></div><figcaption class="imageCaption">Red/Blue: centroid linkage; Red/Green: minimum linkage; Green/Blue: maximum linkage</figcaption></figure><h3 name="b664" id="b664" class="graf graf--h3 graf-after--figure">Graph Community Detection</h3><h4 name="f884" id="f884" class="graf graf--h4 graf-after--h3"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Use when:</em></strong></h4><p name="7a65" id="7a65" class="graf graf--p graf-after--h4">…you have data that can be represented as a network, or ‘graph’.</p><h4 name="ed55" id="ed55" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">How it works:</em></strong></h4><p name="6e96" id="6e96" class="graf graf--p graf-after--h4">A <em class="markup--em markup--p-em">graph community</em> is very generally defined as a subset of vertices which are more connected to each other than with the rest of the network. Various algorithms exist to identify communities, based upon more specific definitions. Algorithms include, but are not limited to, Edge Betweenness, Modularity-Maximsation, Walktrap, Clique Percolation, Leading Eigenvector…</p><h4 name="f180" id="f180" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Worked example:</em></strong></h4><p name="6cc8" id="6cc8" class="graf graf--p graf-after--h4"><a href="https://en.wikipedia.org/wiki/Graph_theory" data-href="https://en.wikipedia.org/wiki/Graph_theory" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Graph theory</a>, or the mathematical study of networks, is a fascinating branch of mathematics that lets us model complex systems as an abstract collection of ‘dots’ (or <em class="markup--em markup--p-em">vertices</em>) connected by ‘lines’ (or <em class="markup--em markup--p-em">edges</em>).</p><p name="a226" id="a226" class="graf graf--p graf-after--p">Perhaps the most intuitive case-studies are social networks. Here, the vertices represent people, and edges connect vertices who are friends/followers. However, any system can be modelled as a network if you can justify a method to meaningfully connect different components. Among the more innovative applications of graph theory to clustering include feature extraction from image data, and analysing gene regulatory networks.</p><p name="30e4" id="30e4" class="graf graf--p graf-after--p">As an entry-level example, take a look at this quickly put-together graph. It shows the eight websites I most recently visited, linked according to whether their respective Wikipedia articles link out to one another. You could assemble this data manually, but for larger-scale projects, it’s much quicker to write a Python script to do the same. <a href="https://raw.githubusercontent.com/pg0408/Medium-articles/master/graph_maker.py" data-href="https://raw.githubusercontent.com/pg0408/Medium-articles/master/graph_maker.py" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Here’s one I wrote earlier</a>.</p><figure name="83ee" id="83ee" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 533px; max-height: 327px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 61.4%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*qd41Vp7sw98vq4PyxVE_DQ.png" data-width="533" data-height="327"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*qd41Vp7sw98vq4PyxVE_DQ.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*qd41Vp7sw98vq4PyxVE_DQ.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*qd41Vp7sw98vq4PyxVE_DQ.png"></noscript></div></div><figcaption class="imageCaption">Graph plotted with ‘igraph’ package for R version 3.3.3</figcaption></figure><p name="3c6b" id="3c6b" class="graf graf--p graf-after--figure">The vertices are colored according to their community membership, and sized according to their <em class="markup--em markup--p-em">centrality</em>. See how Google and Twitter are the most central?</p><p name="b37e" id="b37e" class="graf graf--p graf-after--p">Also, the clusters make pretty good sense in the real-world (always an important performance indicator). The yellow vertices are generally reference/look-up sites; the blue vertices are all used for online publishing (of articles, tweets, or code); and the red vertices include YouTube, which was of course founded by former PayPal employees. Not bad deductions for a machine!</p><p name="4c1c" id="4c1c" class="graf graf--p graf-after--p">Aside from being a useful way to visualize large systems, the real power of networks comes from their mathematical analysis. Let’s start by translating our nice picture of the network into a more mathematical format. Below is the <em class="markup--em markup--p-em">adjacency matrix</em> of the network.</p><pre name="eb66" id="eb66" class="graf graf--pre graf-after--p"><strong class="markup--strong markup--pre-strong">         GH Gl  M  P  Q  T  W  Y</strong><br><strong class="markup--strong markup--pre-strong">GitHub</strong>    0  1  0  0  0  1  0  0  <br><strong class="markup--strong markup--pre-strong">Google</strong>    1  0  1  1  1  1  1  1<br><strong class="markup--strong markup--pre-strong">Medium</strong>    0  1  0  0  0  1  0  0<br><strong class="markup--strong markup--pre-strong">PayPal</strong>    0  1  0  0  0  1  0  1<br><strong class="markup--strong markup--pre-strong">Quora </strong>    0  1  0  0  0  1  1  0<br><strong class="markup--strong markup--pre-strong">Twitter</strong>   1  1  1  1  1  0  0  1<br><strong class="markup--strong markup--pre-strong">Wikipedia</strong> 0  1  0  0  1  0  0  0<br><strong class="markup--strong markup--pre-strong">YouTube</strong>   0  1  0  1  0  1  0  0</pre><p name="7ad5" id="7ad5" class="graf graf--p graf-after--pre">The value at the intersection of each row and column records whether there is an edge between that pair of vertices. For instance, there is an edge between Medium and Twitter (surprise, surprise!), so the value where their rows/columns intersect is 1. Similarly, there is no edge between Medium and PayPal, so the intersection of their rows/columns returns 0.</p><p name="fd3d" id="fd3d" class="graf graf--p graf-after--p">Encoded within the adjacency matrix are all the properties of this network — it gives us the key to start unlocking all manner of valuable insights. For a start, summing any column (or row) gives you the <em class="markup--em markup--p-em">degree</em> of each vertex — i.e., how many others it is connected to. This is commonly denoted with the letter <em class="markup--em markup--p-em">k</em>.</p><p name="7634" id="7634" class="graf graf--p graf-after--p">Likewise, summing the degrees of every vertex and dividing by two gives you <em class="markup--em markup--p-em">L</em>, the number of edges (or ‘links’) in the network. The number of rows/columns gives us <em class="markup--em markup--p-em">N</em>, the number of vertices (or ‘nodes’) in the network.</p><p name="bc6b" id="bc6b" class="graf graf--p graf-after--p">Knowing just <em class="markup--em markup--p-em">k</em>, <em class="markup--em markup--p-em">L, N </em>and the value of each cell in the adjacency matrix <em class="markup--em markup--p-em">A</em> lets us calculate the <a href="https://en.wikipedia.org/wiki/Modularity_%28networks%29" data-href="https://en.wikipedia.org/wiki/Modularity_(networks)" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"><em class="markup--em markup--p-em">modularity</em></a><em class="markup--em markup--p-em"> </em>of<em class="markup--em markup--p-em"> </em>any given clustering of the network.</p><p name="facf" id="facf" class="graf graf--p graf-after--p">Say we’ve clustered the network into a number of communities. We can use the modularity score to assess the ‘quality’ of this clustering. A higher score will show we’ve split the network into ‘accurate’ communities, whereas a low score suggests our clusters are more random than insightful. The image below illustrates this.</p><figure name="b803" id="b803" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 329px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 47.099999999999994%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*6_kSe1q4nDbvnnghF4yJwA.png" data-width="1207" data-height="568" data-action="zoom" data-action-value="1*6_kSe1q4nDbvnnghF4yJwA.png"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*6_kSe1q4nDbvnnghF4yJwA.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*6_kSe1q4nDbvnnghF4yJwA.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*6_kSe1q4nDbvnnghF4yJwA.png"></noscript></div></div><figcaption class="imageCaption">Modularity serves as a measure of the ‘quality’ of a partition.</figcaption></figure><p name="e812" id="e812" class="graf graf--p graf-after--figure">Modularity can be calculated using the formula below:</p><figure name="9b31" id="9b31" class="graf graf--figure graf-after--p"><div class="aspectRatioPlaceholder is-locked" style="max-width: 700px; max-height: 260px;"><div class="aspectRatioPlaceholder-fill" style="padding-bottom: 37.2%;"></div><div class="progressiveMedia js-progressiveMedia graf-image" data-image-id="1*LBCtpmSeRnRnDTF7AJ6nBg.png" data-width="1238" data-height="460" data-action="zoom" data-action-value="1*LBCtpmSeRnRnDTF7AJ6nBg.png"><img src="https://cdn-images-1.medium.com/freeze/max/60/1*LBCtpmSeRnRnDTF7AJ6nBg.png?q=20" crossorigin="anonymous" class="progressiveMedia-thumbnail js-progressiveMedia-thumbnail"><canvas class="progressiveMedia-canvas js-progressiveMedia-canvas"></canvas><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1600/1*LBCtpmSeRnRnDTF7AJ6nBg.png"><noscript class="js-progressiveMedia-inner"><img class="progressiveMedia-noscript js-progressiveMedia-inner" src="https://cdn-images-1.medium.com/max/1600/1*LBCtpmSeRnRnDTF7AJ6nBg.png"></noscript></div></div></figure><p name="4d1a" id="4d1a" class="graf graf--p graf-after--figure">That’s a fair amount of math, but we can break it down bit by bit and it’ll make more sense.</p><p name="72c4" id="72c4" class="graf graf--p graf-after--p"><em class="markup--em markup--p-em">M</em> is of course what we’re calculating — modularity.</p><p name="3b54" id="3b54" class="graf graf--p graf-after--p">1/2<em class="markup--em markup--p-em">L</em> tells us to divide everything that follows by 2<em class="markup--em markup--p-em">L</em>, i.e., twice the number of edges in the network. So far, so good.</p><p name="31c7" id="31c7" class="graf graf--p graf-after--p">The <strong class="markup--strong markup--p-strong">Σ </strong>symbol tells us we’re summing up everything to the right, and lets us iterate over every row and column in the adjacency matrix <em class="markup--em markup--p-em">A</em>. For those unfamiliar with sum notation, the <em class="markup--em markup--p-em">i, j = 1</em> and the <em class="markup--em markup--p-em">N</em> work much like nested for-loops in programming. In Python, you’d write it as follows:</p><pre name="7b23" id="7b23" class="graf graf--pre graf-after--p">sum = 0</pre><pre name="3514" id="3514" class="graf graf--pre graf-after--pre">for i in range(1,N):<br>    for j in range(1,N):<br>        ans = #stuff with i and j as indices<br>        sum += ans</pre><p name="6114" id="6114" class="graf graf--p graf-after--pre">So what is <code class="markup--code markup--p-code">#stuff with i and j</code> in more detail?</p><p name="1f91" id="1f91" class="graf graf--p graf-after--p">Well, the bit in brackets tells us to subtract ( <em class="markup--em markup--p-em">k_i k_j ) / 2L</em> from <em class="markup--em markup--p-em">A_ij</em>.</p><p name="4555" id="4555" class="graf graf--p graf-after--p"><em class="markup--em markup--p-em">A_ij</em> is simply the value in the adjacency matrix at row <em class="markup--em markup--p-em">i</em>, column <em class="markup--em markup--p-em">j</em>.</p><p name="1ca6" id="1ca6" class="graf graf--p graf-after--p">The values of <em class="markup--em markup--p-em">k_i </em>and <em class="markup--em markup--p-em">k_j</em> are the degrees of each vertex — found by adding up the entries in row <em class="markup--em markup--p-em">i </em>and column <em class="markup--em markup--p-em">j </em>respectively. Multiplying these together and dividing by 2<em class="markup--em markup--p-em">L </em>gives us the expected number of edges between vertices <em class="markup--em markup--p-em">i </em>and <em class="markup--em markup--p-em">j </em>if the network were randomly shuffled up.</p><p name="f5d3" id="f5d3" class="graf graf--p graf-after--p">Overall, the term in the brackets reveals the difference between the network’s real structure and the expected structure it would have if randomly reassembled. Playing around with the values shows that it returns its highest value when <em class="markup--em markup--p-em">A_ij</em> = 1, and ( <em class="markup--em markup--p-em">k_i k_j ) / 2L </em>is low. This means we see a higher value if there is an ‘unexpected’ edge between vertices <em class="markup--em markup--p-em">i </em>and <em class="markup--em markup--p-em">j.</em></p><p name="c769" id="c769" class="graf graf--p graf-after--p">Finally, we multiply the bracketed term by whatever the last few symbols refer to.</p><p name="3f93" id="3f93" class="graf graf--p graf-after--p">The 𝛿<em class="markup--em markup--p-em">c_i</em>, <em class="markup--em markup--p-em">c_j </em>is the fancy-sounding but totally harmless <em class="markup--em markup--p-em">Kronecker-delta function</em>. Here it is, explained in Python:</p><pre name="1363" id="1363" class="graf graf--pre graf-after--p">def Kronecker_Delta(ci, cj):<br>    if ci == cj:<br>        return 1<br>    else:<br>        return 0</pre><pre name="333d" id="333d" class="graf graf--pre graf-after--pre">Kronecker_Delta(&quot;A&quot;,&quot;A&quot;)    #returns 1<br>Kronecker_Delta(&quot;A&quot;,&quot;B&quot;)    #returns 0</pre><p name="e32d" id="e32d" class="graf graf--p graf-after--pre">Yes — it really is that simple. The Kronecker-delta function takes two arguments, and returns 1 if they are identical, otherwise, zero.</p><p name="25d5" id="25d5" class="graf graf--p graf-after--p">This means that if vertices<em class="markup--em markup--p-em"> i</em> and <em class="markup--em markup--p-em">j </em>have been put in the same cluster, then 𝛿<em class="markup--em markup--p-em">c_i</em>, <em class="markup--em markup--p-em">c_j = </em>1. Otherwise, if they are in different clusters, the function returns zero.</p><p name="dc84" id="dc84" class="graf graf--p graf-after--p">As we are multiplying the bracketed term by this Kronecker-delta function, we find that for the nested sum <strong class="markup--strong markup--p-strong">Σ</strong>, the outcome is highest when there are lots of ‘unexpected’ edges connecting vertices assigned to the same cluster. As such, modularity is a measure of how well-clustered the graph is into separate communities.</p><p name="7643" id="7643" class="graf graf--p graf-after--p">Dividing by <em class="markup--em markup--p-em">2L</em> bounds the upper value of modularity at 1. Modularity scores near to or below zero indicate the current clustering of the network is really no use. The higher the modularity, the better the clustering of the network into separate communities. By maximising modularity, we can find the best way of clustering the network.</p><p name="4f28" id="4f28" class="graf graf--p graf-after--p">Notice that we have to pre-define how the graph is clustered to find out how ‘good’ that clustering actually is. Unfortunately, employing brute force to try out every possible way of clustering the graph to find which has the highest modularity score would be computationally impossible beyond a very limited sample size.</p><p name="c430" id="c430" class="graf graf--p graf-after--p"><a href="https://en.wikipedia.org/wiki/Partition_of_a_set#Counting_partitions" data-href="https://en.wikipedia.org/wiki/Partition_of_a_set#Counting_partitions" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">Combinatorics</a> tells us that for a network of just eight vertices, there are 4140 different ways of clustering them. A network twice the size would have over ten billion possible ways of clustering the vertices. Doubling the network again (to a very modest 32 vertices) would give 128 septillion possible ways, and a network of eighty vertices would be cluster-able in more ways than there are <a href="https://www.wolframalpha.com/input/?i=991267988808424794443839434655920239360814764000951599022939879419136287216681744888844&amp;lk=1&amp;rawformassumption=%22ClashPrefs%22+-%3E+%7B%22Math%22%7D" data-href="https://www.wolframalpha.com/input/?i=991267988808424794443839434655920239360814764000951599022939879419136287216681744888844&amp;lk=1&amp;rawformassumption=%22ClashPrefs%22+-%3E+%7B%22Math%22%7D" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">atoms in the observable universe</a>.</p><p name="9fe2" id="9fe2" class="graf graf--p graf-after--p">Instead, we have to turn to a <em class="markup--em markup--p-em">heuristic</em> method that does a reasonably good job at estimating the clusters that will produce the highest modularity score, without trying out every single possibility. This is an algorithm called <em class="markup--em markup--p-em">Fast-Greedy Modularity-Maximization,</em> and it’s somewhat analogous to the agglomerative hierarchical clustering algorithm describe above. Instead of merging according to distance, ‘Mod-Max’ merges communities according to changes in modularity. Here’s how it goes:</p><p name="db81" id="db81" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Begin</strong> by initially assigning every vertex to its own community, and calculating the modularity of the whole network, <em class="markup--em markup--p-em">M</em>.</p><p name="80a1" id="80a1" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 1 </strong>requires that for each community pair linked by at least a single edge, the algorithm calculates the resultant change in modularity Δ<em class="markup--em markup--p-em">M </em>if the two communities were merged into one.</p><p name="09cd" id="09cd" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Step 2 </strong>then takes the pair of communities that produce the biggest increase in Δ<em class="markup--em markup--p-em">M, </em>which are then merged. Calculate the new modularity <em class="markup--em markup--p-em">M </em>for this clustering, and keep a record of it.</p><p name="8228" id="8228" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Repeat</strong> steps 1 and 2 — each time merging the pair of communities for which doing so produces the biggest gain in Δ<em class="markup--em markup--p-em">M, </em>then recording the new clustering pattern and its associated modularity score<em class="markup--em markup--p-em"> M</em>.</p><p name="80a6" id="80a6" class="graf graf--p graf-after--p"><strong class="markup--strong markup--p-strong">Stop</strong> when all the vertices are grouped into one giant cluster. Now the algorithm checks the records it kept as it went along, and identifies the clustering pattern that returned the highest value of <em class="markup--em markup--p-em">M</em>. This is the returned community structure.</p><h4 name="3665" id="3665" class="graf graf--h4 graf-after--p"><strong class="markup--strong markup--h4-strong"><em class="markup--em markup--h4-em">Finer details:</em></strong></h4><p name="37cf" id="37cf" class="graf graf--p graf-after--h4">Whew! That was computationally intensive, at least for us humans. Graph theory is a rich source of computationally challenging, often NP-hard problems — yet it also has incredible potential to provide valuable insights into complex systems and datasets. Just ask Larry Page, whose eponymous PageRank algorithm — which helped propel Google from start-up to basically world domination in less than a generation — was based entirely in graph theory.</p><p name="8eec" id="8eec" class="graf graf--p graf-after--p">Community detection is a major focus of current research in graph theory, and there are plenty of alternatives to Modularity-Maximization, which while useful, does have some drawbacks.</p><p name="7379" id="7379" class="graf graf--p graf-after--p">For a start, its agglomerative approach often sees small, well-defined communities swallowed up into larger ones. This is known as the <em class="markup--em markup--p-em">resolution limit</em> — the algorithm will not find communities below a certain size. Another challenge is that rather than having one distinct, easy-to-reach global peak, the Mod-Max approach actually tends to produce a wide ‘plateau’ of many similar high modularity scores — making it somewhat difficult to truly identify the absolute maximum score.</p><p name="3c5a" id="3c5a" class="graf graf--p graf-after--p">Other algorithms use different ways to define and approach community detection. <em class="markup--em markup--p-em">Edge-Betweenness</em> is a divisive algorithm, starting with all vertices grouped in one giant cluster. It proceeds to iteratively remove the least ‘important’ edges in the network, until all vertices are left isolated. This produces a hierarchical structure, with similar vertices closer together in the hierarchy.</p><p name="dd08" id="dd08" class="graf graf--p graf-after--p">Another algorithm is <em class="markup--em markup--p-em">Clique Percolation</em>, which takes into account possible overlap between graph communities. Yet another set of algorithms are based on <a href="https://en.wikipedia.org/wiki/Random_walk" data-href="https://en.wikipedia.org/wiki/Random_walk" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank">random-walks</a> across the graph, and then there are <a href="https://en.wikipedia.org/wiki/Spectral_clustering" data-href="https://en.wikipedia.org/wiki/Spectral_clustering" class="markup--anchor markup--p-anchor" rel="noopener" target="_blank"><em class="markup--em markup--p-em">spectral clustering</em></a> methods which start delving into the eigendecomposition of the adjacency matrix and other matrices derived therefrom. These ideas are used in feature extraction in, for example, areas such as Computer Vision.</p><p name="b391" id="b391" class="graf graf--p graf-after--p">It’d be well beyond the scope of this article to give each algorithm its own in-depth worked example. Suffice to say that this is an active area of research, providing powerful methods to make sense of data that even a generation ago would have been extremely difficult to process.</p><h3 name="6ec6" id="6ec6" class="graf graf--h3 graf-after--p">Conclusion</h3><p name="4fee" id="4fee" class="graf graf--p graf-after--h3">Hopefully this article has informed and inspired you to better understand how machines can make sense of Big Data! The future is a rapidly changing place, and many of those changes will be driven by what technology becomes capable of in the next generation or two.</p><p name="e236" id="e236" class="graf graf--p graf-after--p">As outlined in the introduction, Machine Learning is an extraordinarily ambitious field of research, in which massively complex problems require solving in as accurate and as efficient a way possible. Tasks that come naturally to us humans require innovative solutions when taken on by machines.</p><p name="49ba" id="49ba" class="graf graf--p graf-after--p graf--trailing">There’s still plenty of progress to be made, and whoever contributes the next breakthrough idea will no doubt be generously rewarded. Maybe someone reading this article will be behind the next powerful algorithm? All great ideas have to start somewhere!</p></div></div></section></div><footer class="u-paddingTop10"><div class="container u-maxWidth740"><div class="row"><div class="col u-size12of12"></div></div><div class="row"><div class="col u-size12of12 js-postTags"><div class="u-paddingBottom10"><ul class="tags tags--postTags tags--borderless"><li><a class="link u-baseColor--link"   href="https://medium.freecodecamp.org/tagged/machine-learning?source=post" data-action-source="post" data-collection-slug="free-code-camp">Machine Learning</a></li><li><a class="link u-baseColor--link"   href="https://medium.freecodecamp.org/tagged/data-science?source=post" data-action-source="post" data-collection-slug="free-code-camp">Data Science</a></li><li><a class="link u-baseColor--link"   href="https://medium.freecodecamp.org/tagged/statistics?source=post" data-action-source="post" data-collection-slug="free-code-camp">Statistics</a></li><li><a class="link u-baseColor--link"   href="https://medium.freecodecamp.org/tagged/technology?source=post" data-action-source="post" data-collection-slug="free-code-camp">Technology</a></li><li><a class="link u-baseColor--link"   href="https://medium.freecodecamp.org/tagged/artificial-intelligence?source=post" data-action-source="post" data-collection-slug="free-code-camp">Artificial Intelligence</a></li></ul></div></div></div><section class="uiScale uiScale-ui--small uiScale-caption--regular u-borderTopLightest u-marginTop10 u-paddingTop20"><div class="ui-h3 u-textColorDarker u-fontSize22">One clap, two clap, three clap, forty?</div><p class="ui-body u-marginBottom20 u-textColorDark u-fontSize16">By clapping more or less, you can signal to us which stories really stand out.</p></section><div class="postActions js-postActionsFooter"><div class="u-flexCenter"><div class="u-flex1"><div class="multirecommend js-actionMultirecommend u-flexCenter u-width60" data-post-id="4bd97d4fbaba" data-is-icon-29px="true" data-is-circle="true" data-has-recommend-list="true" data-source="post_actions_footer-----4bd97d4fbaba---------------------clap_footer"><div class="u-relative u-foreground"><button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-xs-paddingLeft13 u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal clap-onboardingcollection"  data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/4bd97d4fbaba" data-action-source="post_actions_footer-----4bd97d4fbaba---------------------clap_footer" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" viewBox="0 0 33 33" ><path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" viewBox="0 0 33 33" ><g fill-rule="evenodd"><path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z"/><path d="M13.285.48l-1.916.881 2.37 2.837z"/><path d="M21.719 1.361L19.79.501l-.44 3.697z"/><path d="M16.502 3.298L15.481 0h2.043z"/></g></svg></span></span></button><div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;"><button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight"  data-action="multivote-undo" data-action-value="4bd97d4fbaba"><span class="svgIcon svgIcon--removeThin svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd"/></svg></span></button></div></div><span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-marginLeft10"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton"  data-action="show-recommends" data-action-value="4bd97d4fbaba">1.95K</button></span></div></div><div class="buttonSet u-flex0"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  data-action="scroll-to-responses" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--response svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.27 20.058c1.89-1.826 2.754-4.17 2.754-6.674C24.024 8.21 19.67 4 14.1 4 8.53 4 4 8.21 4 13.384c0 5.175 4.53 9.385 10.1 9.385 1.007 0 2-.14 2.95-.41.285.25.592.49.918.7 1.306.87 2.716 1.31 4.19 1.31.276-.01.494-.14.6-.36a.625.625 0 0 0-.052-.65c-.61-.84-1.042-1.71-1.282-2.58a5.417 5.417 0 0 1-.154-.75zm-3.85 1.324l-.083-.28-.388.12a9.72 9.72 0 0 1-2.85.424c-4.96 0-8.99-3.706-8.99-8.262 0-4.556 4.03-8.263 8.99-8.263 4.95 0 8.77 3.71 8.77 8.27 0 2.25-.75 4.35-2.5 5.92l-.24.21v.32c0 .07 0 .19.02.37.03.29.1.6.19.92.19.7.49 1.4.89 2.08-.93-.14-1.83-.49-2.67-1.06-.34-.22-.88-.48-1.16-.74z"/></svg></span></button><button class="button button--chromeless u-baseColor--buttonNormal"  data-action="scroll-to-responses">24</button><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon u-xs-hide"  title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--twitter svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z"/></svg></span></button><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon u-xs-hide"  title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--facebook svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4"/></svg></span></button><button class="button button--large button--dark button--chromeless u-baseColor--buttonDark button--withIcon button--withSvgIcon u-xs-show"  title="Share this story on Twitter or Facebook" aria-label="Share this story on Twitter or Facebook" data-action="show-share-popover" data-action-source="post_actions_footer"><span class="svgIcon svgIcon--share svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M20.385 8H19a.5.5 0 1 0 .011 1h1.39c.43 0 .84.168 1.14.473.31.305.48.71.48 1.142v10.77c0 .43-.17.837-.47 1.142-.3.305-.71.473-1.14.473H8.62c-.43 0-.84-.168-1.144-.473a1.603 1.603 0 0 1-.473-1.142v-10.77c0-.43.17-.837.48-1.142A1.599 1.599 0 0 1 8.62 9H10a.502.502 0 0 0 0-1H8.615c-.67 0-1.338.255-1.85.766-.51.51-.765 1.18-.765 1.85v10.77c0 .668.255 1.337.766 1.848.51.51 1.18.766 1.85.766h11.77c.668 0 1.337-.255 1.848-.766.51-.51.766-1.18.766-1.85v-10.77c0-.668-.255-1.337-.766-1.848A2.61 2.61 0 0 0 20.384 8zm-8.67-2.508L14 3.207v8.362c0 .27.224.5.5.5s.5-.23.5-.5V3.2l2.285 2.285a.49.49 0 0 0 .704-.001.511.511 0 0 0 0-.708l-3.14-3.14a.504.504 0 0 0-.71 0L11 4.776a.501.501 0 0 0 .71.706" fill-rule="evenodd"/></svg></span></button></div></div></div></div><div class="u-maxWidth740 u-paddingTop20 u-marginTop20 u-borderTopLightest container u-paddingBottom20 u-xs-paddingBottom10 js-postAttributionFooterContainer"><div class="row js-postFooterInfo"><div class="col u-size6of12 u-xs-size12of12"><li class="uiScale uiScale-ui--small uiScale-caption--regular u-block u-paddingBottom18 js-cardUser"><div class="u-marginLeft20 u-floatRight"><span class="followState js-followState" data-user-id="536515a4b25d"><button class="button button--small u-noUserSelect button--withChrome u-baseColor--buttonNormal button--withHover button--unblock js-unblockButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-block-user" data-requires-token="true" data-redirect="https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba" data-action-source="footer_card"><span class="button-label  button-defaultState">Blocked</span><span class="button-label button-hoverState">Unblock</span></button><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal button--follow js-followButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-user" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/user/536515a4b25d" data-action-source="footer_card-536515a4b25d-------------------------follow_footer"><span class="button-label  button-defaultState js-buttonLabel">Follow</span><span class="button-label button-activeState">Following</span></button></span></div><div class="u-tableCell"><a class="link u-baseColor--link avatar"   href="https://medium.freecodecamp.org/@petergleeson1?source=footer_card" title="Go to the profile of Peter Gleeson" aria-label="Go to the profile of Peter Gleeson" data-action-source="footer_card" data-user-id="536515a4b25d" data-collection-slug="free-code-camp" dir="auto"><img  src="https://cdn-images-1.medium.com/fit/c/120/120/1*jYH_43uKbwiZhfXddHE1BQ.jpeg" class="avatar-image avatar-image--small" alt="Go to the profile of Peter Gleeson"></a></div><div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15"><h3 class="ui-h3 u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal"   href="https://medium.freecodecamp.org/@petergleeson1" property="cc:attributionName" title="Go to the profile of Peter Gleeson" aria-label="Go to the profile of Peter Gleeson" rel="author cc:attributionUrl" data-user-id="536515a4b25d" data-collection-slug="free-code-camp" dir="auto">Peter Gleeson</a></h3><p class="ui-body u-fontSize14 u-lineHeightBaseSans u-textColorDark u-marginBottom4">Writer on topics in data science, statistics and programming</p></div></li></div><div class="col u-size6of12 u-xs-size12of12 u-xs-marginTop30"><li class="uiScale uiScale-ui--small uiScale-caption--regular u-block u-paddingBottom18 js-cardCollection"><div class="u-marginLeft20 u-floatRight"><button class="button button--primary button--small u-noUserSelect button--withChrome u-accentColor--buttonNormal js-relationshipButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-follow-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/free-code-camp" data-action-source="----336d898217ee----------------------follow_footer" data-collection-id="336d898217ee"><span class="button-label  js-buttonLabel">Follow</span></button></div><div class="u-tableCell "><a class="link u-baseColor--link avatar avatar--roundedRectangle"   href="https://medium.freecodecamp.org?source=footer_card" title="Go to freeCodeCamp" aria-label="Go to freeCodeCamp" data-action-source="footer_card" data-collection-slug="free-code-camp"><img src="https://cdn-images-1.medium.com/fit/c/120/120/1*MotlWcSa2n6FrOx3ul89kw.png" class="avatar-image u-size60x60" alt="freeCodeCamp"></a></div><div class="u-tableCell u-verticalAlignMiddle u-breakWord u-paddingLeft15"><h3 class="ui-h3 u-fontSize18 u-lineHeightTighter u-marginBottom4"><a class="link link--primary u-accentColor--hoverTextNormal"   href="https://medium.freecodecamp.org?source=footer_card" rel="collection" data-action-source="footer_card" data-collection-slug="free-code-camp">freeCodeCamp</a></h3><p class="ui-body u-fontSize14 u-lineHeightBaseSans u-textColorDark u-marginBottom4">Our community publishes stories worth reading on development, design, and data science.</p><div class="buttonSet"></div></div></li></div></div></div><div class="js-postFooterPlacements"></div><div class="u-padding0 u-clearfix u-backgroundGrayLightest u-print-hide supplementalPostContent js-responsesWrapper"></div><div class="supplementalPostContent js-heroPromo"></div></footer></article></main><div class="u-marginAuto u-maxWidth1000"><div class="js-postShareWidget u-foreground u-sm-hide u-transition--fadeOut300 u-fixed"><ul><li class="u-textAlignCenter u-marginVertical10"><div class="multirecommend js-actionMultirecommend u-flexColumn u-marginBottom10 u-width60" data-post-id="4bd97d4fbaba" data-is-icon-29px="true" data-is-vertical="true" data-is-circle="true" data-has-recommend-list="true" data-source="post_share_widget-----4bd97d4fbaba---------------------clap_sidebar"><div class="u-relative u-foreground"><button class="button button--large button--circle button--withChrome u-baseColor--buttonNormal button--withIcon button--withSvgIcon clapButton js-actionMultirecommendButton clapButton--largePill u-relative u-foreground u-xs-paddingLeft13 u-width60 u-height60 u-accentColor--textNormal u-accentColor--buttonNormal"  data-action="sign-up-prompt" data-sign-in-action="multivote" data-requires-token="true" data-redirect="https://medium.com/_/vote/p/4bd97d4fbaba" data-action-source="post_share_widget-----4bd97d4fbaba---------------------clap_sidebar" aria-label="Clap"><span class="button-defaultState"><span class="svgIcon svgIcon--clap svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" viewBox="0 0 33 33" ><path d="M28.86 17.342l-3.64-6.402c-.292-.433-.712-.729-1.163-.8a1.124 1.124 0 0 0-.889.213c-.63.488-.742 1.181-.33 2.061l1.222 2.587 1.4 2.46c2.234 4.085 1.511 8.007-2.145 11.663-.26.26-.526.49-.797.707 1.42-.084 2.881-.683 4.292-2.094 3.822-3.823 3.565-7.876 2.05-10.395zm-6.252 11.075c3.352-3.35 3.998-6.775 1.978-10.469l-3.378-5.945c-.292-.432-.712-.728-1.163-.8a1.122 1.122 0 0 0-.89.213c-.63.49-.742 1.182-.33 2.061l1.72 3.638a.502.502 0 0 1-.806.568l-8.91-8.91a1.335 1.335 0 0 0-1.887 1.886l5.292 5.292a.5.5 0 0 1-.707.707l-5.292-5.292-1.492-1.492c-.503-.503-1.382-.505-1.887 0a1.337 1.337 0 0 0 0 1.886l1.493 1.492 5.292 5.292a.499.499 0 0 1-.353.854.5.5 0 0 1-.354-.147L5.642 13.96a1.338 1.338 0 0 0-1.887 0 1.338 1.338 0 0 0 0 1.887l2.23 2.228 3.322 3.324a.499.499 0 0 1-.353.853.502.502 0 0 1-.354-.146l-3.323-3.324a1.333 1.333 0 0 0-1.886 0 1.325 1.325 0 0 0-.39.943c0 .356.138.691.39.943l6.396 6.397c3.528 3.53 8.86 5.313 12.821 1.353zM12.73 9.26l5.68 5.68-.49-1.037c-.518-1.107-.426-2.13.224-2.89l-3.303-3.304a1.337 1.337 0 0 0-1.886 0 1.326 1.326 0 0 0-.39.944c0 .217.067.42.165.607zm14.787 19.184c-1.599 1.6-3.417 2.392-5.353 2.392-.349 0-.7-.03-1.058-.082a7.922 7.922 0 0 1-3.667.887c-3.049 0-6.115-1.626-8.359-3.87l-6.396-6.397A2.315 2.315 0 0 1 2 19.724a2.327 2.327 0 0 1 1.923-2.296l-.875-.875a2.339 2.339 0 0 1 0-3.3 2.33 2.33 0 0 1 1.24-.647l-.139-.139c-.91-.91-.91-2.39 0-3.3.884-.884 2.421-.882 3.301 0l.138.14a2.335 2.335 0 0 1 3.948-1.24l.093.092c.091-.423.291-.828.62-1.157a2.336 2.336 0 0 1 3.3 0l3.384 3.386a2.167 2.167 0 0 1 1.271-.173c.534.086 1.03.354 1.441.765.11-.549.415-1.034.911-1.418a2.12 2.12 0 0 1 1.661-.41c.727.117 1.385.565 1.853 1.262l3.652 6.423c1.704 2.832 2.025 7.377-2.205 11.607zM13.217.484l-1.917.882 2.37 2.837-.454-3.719zm8.487.877l-1.928-.86-.44 3.697 2.368-2.837zM16.5 3.293L15.478-.005h2.044L16.5 3.293z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--clapFilled svgIcon--33px u-relative u-topNegative2 u-xs-top0"><svg class="svgIcon-use" width="33" height="33" viewBox="0 0 33 33" ><g fill-rule="evenodd"><path d="M29.58 17.1l-3.854-6.78c-.365-.543-.876-.899-1.431-.989a1.491 1.491 0 0 0-1.16.281c-.42.327-.65.736-.7 1.207v.001l3.623 6.367c2.46 4.498 1.67 8.802-2.333 12.807-.265.265-.536.505-.81.728 1.973-.222 3.474-1.286 4.45-2.263 4.166-4.165 3.875-8.6 2.215-11.36zm-4.831.82l-3.581-6.3c-.296-.439-.725-.742-1.183-.815a1.105 1.105 0 0 0-.89.213c-.647.502-.755 1.188-.33 2.098l1.825 3.858a.601.601 0 0 1-.197.747.596.596 0 0 1-.77-.067L10.178 8.21c-.508-.506-1.393-.506-1.901 0a1.335 1.335 0 0 0-.393.95c0 .36.139.698.393.95v.001l5.61 5.61a.599.599 0 1 1-.848.847l-5.606-5.606c-.001 0-.002 0-.003-.002L5.848 9.375a1.349 1.349 0 0 0-1.902 0 1.348 1.348 0 0 0 0 1.901l1.582 1.582 5.61 5.61a.6.6 0 0 1-.848.848l-5.61-5.61c-.51-.508-1.393-.508-1.9 0a1.332 1.332 0 0 0-.394.95c0 .36.139.697.393.952l2.363 2.362c.002.001.002.002.002.003l3.52 3.52a.6.6 0 0 1-.848.847l-3.522-3.523h-.001a1.336 1.336 0 0 0-.95-.393 1.345 1.345 0 0 0-.949 2.295l6.779 6.78c3.715 3.713 9.327 5.598 13.49 1.434 3.527-3.528 4.21-7.13 2.086-11.015zM11.817 7.727c.06-.328.213-.64.466-.893.64-.64 1.755-.64 2.396 0l3.232 3.232c-.82.783-1.09 1.833-.764 2.992l-5.33-5.33z"/><path d="M13.285.48l-1.916.881 2.37 2.837z"/><path d="M21.719 1.361L19.79.501l-.44 3.697z"/><path d="M16.502 3.298L15.481 0h2.043z"/></g></svg></span></span></button><div class="clapUndo u-width60 u-round u-height32 u-absolute u-borderBox u-paddingRight5 u-transition--transform200Spring u-background--brandSageLighter js-clapUndo" style="top: 14px; padding: 2px;"><button class="button button--chromeless u-baseColor--buttonNormal button--withIcon button--withSvgIcon u-floatRight"  data-action="multivote-undo" data-action-value="4bd97d4fbaba"><span class="svgIcon svgIcon--removeThin svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M20.13 8.11l-5.61 5.61-5.609-5.61-.801.801 5.61 5.61-5.61 5.61.801.8 5.61-5.609 5.61 5.61.8-.801-5.609-5.61 5.61-5.61" fill-rule="evenodd"/></svg></span></button></div></div><span class="u-textAlignCenter u-relative u-background js-actionMultirecommendCount u-flexOrderNegative1 u-height20 u-marginBottom7"><button class="button button--chromeless u-baseColor--buttonNormal js-multirecommendCountButton u-block u-marginAuto"  data-action="show-recommends" data-action-value="4bd97d4fbaba">1.95K</button></span></div></li><li class="u-textAlignCenter u-marginVertical10"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Twitter" aria-label="Share on Twitter" data-action="share-on-twitter" data-action-source="post_share_widget"><span class="svgIcon svgIcon--twitter svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M21.967 11.8c.018 5.93-4.607 11.18-11.177 11.18-2.172 0-4.25-.62-6.047-1.76l-.268.422-.038.5.186.013.168.012c.3.02.44.032.6.046 2.06-.026 3.95-.686 5.49-1.86l1.12-.85-1.4-.048c-1.57-.055-2.92-1.08-3.36-2.51l-.48.146-.05.5c.22.03.48.05.75.08.48-.02.87-.07 1.25-.15l2.33-.49-2.32-.49c-1.68-.35-2.91-1.83-2.91-3.55 0-.05 0-.01-.01.03l-.49-.1-.25.44c.63.36 1.35.57 2.07.58l1.7.04L7.4 13c-.978-.662-1.59-1.79-1.618-3.047a4.08 4.08 0 0 1 .524-1.8l-.825.07a12.188 12.188 0 0 0 8.81 4.515l.59.033-.06-.59v-.02c-.05-.43-.06-.63-.06-.87a3.617 3.617 0 0 1 6.27-2.45l.2.21.28-.06c1.01-.22 1.94-.59 2.73-1.09l-.75-.56c-.1.36-.04.89.12 1.36.23.68.58 1.13 1.17.85l-.21-.45-.42-.27c-.52.8-1.17 1.48-1.92 2L22 11l.016.28c.013.2.014.35 0 .52v.04zm.998.038c.018-.22.017-.417 0-.66l-.498.034.284.41a8.183 8.183 0 0 0 2.2-2.267l.97-1.48-1.6.755c.17-.08.3-.02.34.03a.914.914 0 0 1-.13-.292c-.1-.297-.13-.64-.1-.766l.36-1.254-1.1.695c-.69.438-1.51.764-2.41.963l.48.15a4.574 4.574 0 0 0-3.38-1.484 4.616 4.616 0 0 0-4.61 4.613c0 .29.02.51.08.984l.01.02.5-.06.03-.5c-3.17-.18-6.1-1.7-8.08-4.15l-.48-.56-.36.64c-.39.69-.62 1.48-.65 2.28.04 1.61.81 3.04 2.06 3.88l.3-.92c-.55-.02-1.11-.17-1.6-.45l-.59-.34-.14.67c-.02.08-.02.16 0 .24-.01 2.12 1.55 4.01 3.69 4.46l.1-.49-.1-.49c-.33.07-.67.12-1.03.14-.18-.02-.43-.05-.64-.07l-.76-.09.23.73c.57 1.84 2.29 3.14 4.28 3.21l-.28-.89a8.252 8.252 0 0 1-4.85 1.66c-.12-.01-.26-.02-.56-.05l-.17-.01-.18-.01L2.53 21l1.694 1.07a12.233 12.233 0 0 0 6.58 1.917c7.156 0 12.2-5.73 12.18-12.18l-.002.04z"/></svg></span></button></li><li class="u-textAlignCenter u-marginVertical10"><button class="button button--large button--dark button--chromeless is-touchIconBlackPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon"  title="Share on Facebook" aria-label="Share on Facebook" data-action="share-on-facebook" data-action-source="post_share_widget"><span class="svgIcon svgIcon--facebook svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M16.39 23.61v-5.808h1.846a.55.55 0 0 0 .546-.48l.36-2.797a.551.551 0 0 0-.547-.62H16.39V12.67c0-.67.12-.813.828-.813h1.474a.55.55 0 0 0 .55-.55V8.803a.55.55 0 0 0-.477-.545c-.436-.06-1.36-.116-2.22-.116-2.5 0-4.13 1.62-4.13 4.248v1.513H10.56a.551.551 0 0 0-.55.55v2.797c0 .304.248.55.55.55h1.855v5.76c-4.172-.96-7.215-4.7-7.215-9.1 0-5.17 4.17-9.36 9.31-9.36 5.14 0 9.31 4.19 9.31 9.36 0 4.48-3.155 8.27-7.43 9.15M14.51 4C8.76 4 4.1 8.684 4.1 14.46c0 5.162 3.75 9.523 8.778 10.32a.55.55 0 0 0 .637-.543v-6.985a.551.551 0 0 0-.55-.55H11.11v-1.697h1.855a.55.55 0 0 0 .55-.55v-2.063c0-2.02 1.136-3.148 3.03-3.148.567 0 1.156.027 1.597.06v1.453h-.924c-1.363 0-1.93.675-1.93 1.912v1.78c0 .3.247.55.55.55h2.132l-.218 1.69H15.84c-.305 0-.55.24-.55.55v7.02c0 .33.293.59.623.54 5.135-.7 9.007-5.11 9.007-10.36C24.92 8.68 20.26 4 14.51 4"/></svg></span></button></li><li class="u-textAlignCenter u-marginVertical10"><button class="button button--large button--dark button--chromeless is-touchIconFadeInPulse u-baseColor--buttonDark button--withIcon button--withSvgIcon button--bookmark js-bookmarkButton"  title="Bookmark this story to read later" aria-label="Bookmark this story to read later" data-action="sign-up-prompt" data-sign-in-action="add-to-bookmarks" data-requires-token="true" data-redirect="https://medium.com/_/bookmark/p/4bd97d4fbaba" data-action-source="post_share_widget-----4bd97d4fbaba---------------------bookmark_sidebar"><span class="button-defaultState"><span class="svgIcon svgIcon--bookmark svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4zM21 23l-5.91-3.955-.148-.107a.751.751 0 0 0-.884 0l-.147.107L8 23V6.615C8 5.725 8.725 5 9.615 5h9.77C20.275 5 21 5.725 21 6.615V23z" fill-rule="evenodd"/></svg></span></span><span class="button-activeState"><span class="svgIcon svgIcon--bookmarkFilled svgIcon--29px"><svg class="svgIcon-use" width="29" height="29" viewBox="0 0 29 29" ><path d="M19.385 4h-9.77A2.623 2.623 0 0 0 7 6.615V23.01a1.022 1.022 0 0 0 1.595.847l5.905-4.004 5.905 4.004A1.022 1.022 0 0 0 22 23.011V6.62A2.625 2.625 0 0 0 19.385 4z" fill-rule="evenodd"/></svg></span></span></button></li></ul></div></div><div class="u-fixed u-bottom0 u-sizeFullWidth u-backgroundWhite u-boxShadowTop u-borderBox u-paddingTop10 u-paddingBottom10 u-zIndexMetabar u-xs-paddingLeft10 u-xs-paddingRight10 js-stickyFooter"><div class="u-maxWidth700 u-marginAuto u-flexCenter"><div class="u-fontSize16 u-flex1 u-flexCenter"><div class="u-flex0 u-inlineBlock u-paddingRight20 u-xs-paddingRight10"><a class="link u-baseColor--link avatar avatar--roundedRectangle"   href="https://medium.freecodecamp.org" title="Go to freeCodeCamp" aria-label="Go to freeCodeCamp" data-collection-slug="free-code-camp"><img src="https://cdn-images-1.medium.com/fit/c/80/80/1*MotlWcSa2n6FrOx3ul89kw.png" class="avatar-image avatar-image--smaller" alt="freeCodeCamp"></a></div><div class="u-flex1 u-inlineBlock"><div class="u-xs-hide">Never miss a story from<strong> freeCodeCamp</strong>, when you sign up for Medium. <a class="link u-baseColor--link link--accent u-accentColor--textNormal u-accentColor--textDarken"   href="https://medium.com/@Medium/personalize-your-medium-experience-with-users-publications-tags-26a41ab1ee0c#.hx4zuv3mg" data-action-source="sticky_footer">Learn more</a></div><div class="u-xs-show">Never miss a story from<strong> freeCodeCamp</strong></div></div></div><div class="u-marginLeft50 u-xs-marginAuto"><button class="button button--primary button--dark is-active u-noUserSelect button--withChrome u-accentColor--buttonDark u-uiTextSemibold u-textUppercase u-fontSize12 button--followCollection js-followCollectionButton"  data-action="sign-up-prompt" data-sign-in-action="toggle-subscribe-collection" data-requires-token="true" data-redirect="https://medium.com/_/subscribe/collection/free-code-camp" data-action-source="sticky_footer----336d898217ee----------------------follow_metabar"><span class="button-label  button-defaultState js-buttonLabel">Get updates</span><span class="button-label button-activeState">Get updates</span></button></div></div></div><style class="js-collectionStyle">
.u-accentColor--borderLight {border-color: #429A35 !important;}
.u-accentColor--borderNormal {border-color: #429A35 !important;}
.u-accentColor--borderDark {border-color: #3E8432 !important;}
.u-accentColor--iconLight .svgIcon,.u-accentColor--iconLight.svgIcon {fill: #429A35 !important;}
.u-accentColor--iconNormal .svgIcon,.u-accentColor--iconNormal.svgIcon {fill: #429A35 !important;}
.u-accentColor--iconDark .svgIcon,.u-accentColor--iconDark.svgIcon {fill: #3E8432 !important;}
.u-accentColor--textNormal {color: #3E8432 !important;}
.u-accentColor--hoverTextNormal:hover {color: #3E8432 !important;}
.u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #3B7830 !important;}
.u-accentColor--textDark {color: #3B7830 !important;}
.u-accentColor--backgroundLight {background-color: #429A35 !important;}
.u-accentColor--backgroundNormal {background-color: #429A35 !important;}
.u-accentColor--backgroundDark {background-color: #3E8432 !important;}
.u-accentColor--buttonDark {border-color: #3E8432 !important; color: #3B7830 !important;}
.u-accentColor--buttonDark:hover {border-color: #3B7830 !important;}
.u-accentColor--buttonDark .icon:before,.u-accentColor--buttonDark .svgIcon{color: #3E8432 !important; fill: #3E8432 !important;}
.u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: #429A35 !important; color: #3E8432 !important;}
.u-accentColor--buttonNormal:hover {border-color: #3E8432 !important;}
.u-accentColor--buttonNormal .icon:before,.u-accentColor--buttonNormal .svgIcon{color: #429A35 !important; fill: #429A35 !important;}
.u-accentColor--buttonNormal.button--filled .icon:before,.u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonDark.button--filled,.u-accentColor--buttonDark.button--withChrome.is-active,.u-accentColor--fillWhenActive.is-active {background-color: #3E8432 !important; border-color: #3E8432 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: #429A35 !important; border-color: #429A35 !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.postArticle.is-withAccentColors .markup--user,.postArticle.is-withAccentColors .markup--query {color: #3E8432 !important;}.u-tintBgColor {background-color: rgba(0, 100, 0, 1) !important;}.u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(0, 100, 0, 1) 0%, rgba(0, 100, 0, 0) 100%) !important;}.u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(0, 100, 0, 0) 0%, rgba(0, 100, 0, 1) 100%) !important;}
.u-tintSpectrum .u-baseColor--borderLight {border-color: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--borderNormal {border-color: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--borderDark {border-color: #DFF8D4 !important;}
.u-tintSpectrum .u-baseColor--iconLight .svgIcon,.u-tintSpectrum .u-baseColor--iconLight.svgIcon {fill: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--iconNormal .svgIcon,.u-tintSpectrum .u-baseColor--iconNormal.svgIcon {fill: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--iconDark .svgIcon,.u-tintSpectrum .u-baseColor--iconDark.svgIcon {fill: #DFF8D4 !important;}
.u-tintSpectrum .u-baseColor--textNormal {color: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--textDark {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--textDarker {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--backgroundLight {background-color: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--backgroundNormal {background-color: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--backgroundDark {background-color: #DFF8D4 !important;}
.u-tintSpectrum .u-baseColor--buttonLight {border-color: #8ABF7C !important; color: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--buttonLight:hover {border-color: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--buttonLight .icon:before,.u-tintSpectrum .u-baseColor--buttonLight .svgIcon {color: #8ABF7C !important; fill: #8ABF7C !important;}
.u-tintSpectrum .u-baseColor--buttonDark {border-color: #DFF8D4 !important; color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--buttonDark:hover {border-color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--buttonDark .icon:before,.u-tintSpectrum .u-baseColor--buttonDark .svgIcon {color: #DFF8D4 !important; fill: #DFF8D4 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal {border-color: #B5DDA8 !important; color: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal:hover {border-color: #DFF8D4 !important;}
.u-tintSpectrum .u-baseColor--buttonNormal .icon:before,.u-tintSpectrum .u-baseColor--buttonNormal .svgIcon {color: #B5DDA8 !important; fill: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--buttonDark.button--filled,.u-tintSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: #DFF8D4 !important; border-color: #DFF8D4 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;}
.u-tintSpectrum .u-baseColor--buttonNormal.button--filled,.u-tintSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: #B5DDA8 !important; border-color: #B5DDA8 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;}
.u-tintSpectrum .u-baseColor--link {color: #B5DDA8 !important;}
.u-tintSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--link.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--darken:active {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--link.link--dark {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-tintSpectrum .u-baseColor--link.link--dark.link--darken:active {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--link.link--darker {color: #F3FFEA !important;}
.u-tintSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: #8ABF7C;}
.u-tintSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: #8ABF7C;}
.u-tintSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: #8ABF7C;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: #458C39 !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: #5D9E50 !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: #8ABF7C !important;}
.u-tintSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: #B5DDA8 !important;}
.u-tintSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: #F3FFEA !important;}
.u-tintSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: #F3FFEA !important;}
.u-tintSpectrum  .ui-h1,.u-tintSpectrum  .ui-h2,.u-tintSpectrum  .ui-h3,.u-tintSpectrum  .ui-h4,.u-tintSpectrum  .ui-brand1,.u-tintSpectrum  .ui-brand2,.u-tintSpectrum  .ui-captionStrong {color: #F3FFEA !important; fill: #F3FFEA !important;}
.u-tintSpectrum  .ui-body,.u-tintSpectrum  .ui-caps {color: #F3FFEA !important; fill: #F3FFEA !important;}
.u-tintSpectrum  .ui-summary,.u-tintSpectrum  .ui-caption {color: #8ABF7C !important; fill: #8ABF7C !important;}
.u-tintSpectrum .u-accentColor--borderLight {border-color: #8ABF7C !important;}
.u-tintSpectrum .u-accentColor--borderNormal {border-color: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--borderDark {border-color: #DFF8D4 !important;}
.u-tintSpectrum .u-accentColor--iconLight .svgIcon,.u-tintSpectrum .u-accentColor--iconLight.svgIcon {fill: #8ABF7C !important;}
.u-tintSpectrum .u-accentColor--iconNormal .svgIcon,.u-tintSpectrum .u-accentColor--iconNormal.svgIcon {fill: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--iconDark .svgIcon,.u-tintSpectrum .u-accentColor--iconDark.svgIcon {fill: #DFF8D4 !important;}
.u-tintSpectrum .u-accentColor--textNormal {color: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--hoverTextNormal:hover {color: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: #F3FFEA !important;}
.u-tintSpectrum .u-accentColor--textDark {color: #F3FFEA !important;}
.u-tintSpectrum .u-accentColor--backgroundLight {background-color: #8ABF7C !important;}
.u-tintSpectrum .u-accentColor--backgroundNormal {background-color: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--backgroundDark {background-color: #DFF8D4 !important;}
.u-tintSpectrum .u-accentColor--buttonDark {border-color: #DFF8D4 !important; color: #F3FFEA !important;}
.u-tintSpectrum .u-accentColor--buttonDark:hover {border-color: #F3FFEA !important;}
.u-tintSpectrum .u-accentColor--buttonDark .icon:before,.u-tintSpectrum .u-accentColor--buttonDark .svgIcon{color: #DFF8D4 !important; fill: #DFF8D4 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: #B5DDA8 !important; color: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal:hover {border-color: #DFF8D4 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal .svgIcon{color: #B5DDA8 !important; fill: #B5DDA8 !important;}
.u-tintSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-tintSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;}
.u-tintSpectrum .u-accentColor--buttonDark.button--filled,.u-tintSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-tintSpectrum .u-accentColor--fillWhenActive.is-active {background-color: #DFF8D4 !important; border-color: #DFF8D4 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;}
.u-tintSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-tintSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: #B5DDA8 !important; border-color: #B5DDA8 !important; color: rgba(0, 100, 0, 1) !important; fill: rgba(0, 100, 0, 1) !important;}
.u-tintSpectrum .postArticle.is-withAccentColors .markup--user,.u-tintSpectrum .postArticle.is-withAccentColors .markup--query {color: #B5DDA8 !important;}
.u-accentColor--highlightFaint {background-color: rgba(222, 250, 211, 1) !important;}
.u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(172, 246, 153, 1) !important;}
.postArticle.is-withAccentColors .markup--quote.is-other {background-color: rgba(222, 250, 211, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(222, 250, 211, 1), rgba(222, 250, 211, 1));}
.postArticle.is-withAccentColors .markup--quote.is-me {background-color: rgba(195, 248, 179, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(195, 248, 179, 1), rgba(195, 248, 179, 1));}
.postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: rgba(172, 246, 153, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));}
.postArticle.is-withAccentColors .markup--quote.is-selected {background-color: rgba(172, 246, 153, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));}
.postArticle.is-withAccentColors .markup--highlight {background-color: rgba(172, 246, 153, 1) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(172, 246, 153, 1), rgba(172, 246, 153, 1));}.u-baseColor--iconNormal.avatar-halo {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}</style><style class="js-collectionStyleConstant">.u-imageBgColor {background-color: rgba(0, 0, 0, 0.24705882352941178);}
.u-imageSpectrum .u-baseColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconLight .svgIcon,.u-imageSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--iconNormal .svgIcon,.u-imageSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--iconDark .svgIcon,.u-imageSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--textDarker {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-baseColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important; color: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-baseColor--buttonLight .icon:before,.u-imageSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-baseColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonDark .icon:before,.u-imageSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal .icon:before,.u-imageSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--buttonDark.button--filled,.u-imageSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--buttonNormal.button--filled,.u-imageSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-baseColor--link {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-imageSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--link.link--darker {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(255, 255, 255, 0.8);}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(255, 255, 255, 0.4) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(255, 255, 255, 0.4980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum  .ui-h1,.u-imageSpectrum  .ui-h2,.u-imageSpectrum  .ui-h3,.u-imageSpectrum  .ui-h4,.u-imageSpectrum  .ui-brand1,.u-imageSpectrum  .ui-brand2,.u-imageSpectrum  .ui-captionStrong {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum  .ui-body,.u-imageSpectrum  .ui-caps {color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum  .ui-summary,.u-imageSpectrum  .ui-caption {color: rgba(255, 255, 255, 0.8) !important; fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-accentColor--borderLight {border-color: rgba(255, 255, 255, 0.6980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderNormal {border-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--borderDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconLight .svgIcon,.u-imageSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(255, 255, 255, 0.8) !important;}
.u-imageSpectrum .u-accentColor--iconNormal .svgIcon,.u-imageSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--iconDark .svgIcon,.u-imageSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textNormal {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--textDark {color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--backgroundLight {background-color: rgba(255, 255, 255, 0.8980392156862745) !important;}
.u-imageSpectrum .u-accentColor--backgroundNormal {background-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--backgroundDark {background-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark {border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonDark .icon:before,.u-imageSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(255, 255, 255, 0.8980392156862745) !important; color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(255, 255, 255, 0.9490196078431372) !important; fill: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-imageSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonDark.button--filled,.u-imageSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-imageSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(255, 255, 255, 1) !important; border-color: rgba(255, 255, 255, 1) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-imageSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(255, 255, 255, 0.9490196078431372) !important; border-color: rgba(255, 255, 255, 0.9490196078431372) !important; color: rgba(0, 0, 0, 0.24705882352941178) !important; fill: rgba(0, 0, 0, 0.24705882352941178) !important;}
.u-imageSpectrum .postArticle.is-withAccentColors .markup--user,.u-imageSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(255, 255, 255, 0.9490196078431372) !important;}
.u-imageSpectrum .u-accentColor--highlightFaint {background-color: rgba(255, 255, 255, 0.2) !important;}
.u-imageSpectrum .u-accentColor--highlightStrong.is-active .svgIcon {fill: rgba(255, 255, 255, 0.6) !important;}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: rgba(255, 255, 255, 0.2) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-other {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.2), rgba(255, 255, 255, 0.2));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: rgba(255, 255, 255, 0.4) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-me {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0.4));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-targeted {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--quote.is-selected {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}
.postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: rgba(255, 255, 255, 0.6) !important;}
body.is-withMagicUnderlines .postArticle.is-withAccentColors .u-imageSpectrum .markup--highlight {background-color: transparent !important; background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0.6), rgba(255, 255, 255, 0.6));}.u-resetSpectrum .u-tintBgColor {background-color: rgba(255, 255, 255, 1) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeLeft:before {background-image: linear-gradient(to right, rgba(255, 255, 255, 1) 0%, rgba(255, 255, 255, 0) 100%) !important;}.u-resetSpectrum .u-tintBgColor .u-fadeRight:after {background-image: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 1) 100%) !important;}
.u-resetSpectrum .u-baseColor--borderLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--borderDark {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--iconLight .svgIcon,.u-resetSpectrum .u-baseColor--iconLight.svgIcon {fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconNormal .svgIcon,.u-resetSpectrum .u-baseColor--iconNormal.svgIcon {fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--iconDark .svgIcon,.u-resetSpectrum .u-baseColor--iconDark.svgIcon {fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textNormal {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--textNormal.u-baseColor--textDarken:hover {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textDark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--textDarker {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--backgroundLight {background-color: rgba(0, 0, 0, 0.09803921568627451) !important;}
.u-resetSpectrum .u-baseColor--backgroundNormal {background-color: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .u-baseColor--backgroundDark {background-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight {border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight:hover {border-color: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonLight .icon:before,.u-resetSpectrum .u-baseColor--buttonLight .svgIcon {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark {border-color: rgba(0, 0, 0, 0.6) !important; color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonDark:hover {border-color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--buttonDark .icon:before,.u-resetSpectrum .u-baseColor--buttonDark .svgIcon {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal {border-color: rgba(0, 0, 0, 0.4980392156862745) !important; color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal:hover {border-color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal .icon:before,.u-resetSpectrum .u-baseColor--buttonNormal .svgIcon {color: rgba(0, 0, 0, 0.4980392156862745) !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--buttonDark.button--filled,.u-resetSpectrum .u-baseColor--buttonDark.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2980392156862745) !important; border-color: rgba(0, 0, 0, 0.2980392156862745) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--buttonNormal.button--filled,.u-resetSpectrum .u-baseColor--buttonNormal.button--withChrome.is-active {background-color: rgba(0, 0, 0, 0.2) !important; border-color: rgba(0, 0, 0, 0.2) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-baseColor--link {color: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .u-baseColor--link.link--darkenOnHover:hover {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--darken:active {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark {color: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:hover,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:focus,.u-resetSpectrum .u-baseColor--link.link--dark.link--darken:active {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--link.link--darker {color: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-webkit-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal ::-moz-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .u-baseColor--placeholderNormal :-ms-input-placeholder {color: rgba(0, 0, 0, 0.2980392156862745);}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(1) {stroke: none !important; fill: rgba(0, 0, 0, 0.2) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(2) {stroke: none !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(3) {stroke: none !important; fill: rgba(0, 0, 0, 0.4) !important;}
.u-resetSpectrum .svgIcon--logoNew path:nth-child(4) {stroke: none !important; fill: rgba(0, 0, 0, 0.4980392156862745) !important;}
.u-resetSpectrum .svgIcon--logoWordmark {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum .svgIcon--logoMonogram {stroke: none !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum  .ui-h1,.u-resetSpectrum  .ui-h2,.u-resetSpectrum  .ui-h3,.u-resetSpectrum  .ui-h4,.u-resetSpectrum  .ui-brand1,.u-resetSpectrum  .ui-brand2,.u-resetSpectrum  .ui-captionStrong {color: rgba(0, 0, 0, 0.8) !important; fill: rgba(0, 0, 0, 0.8) !important;}
.u-resetSpectrum  .ui-body,.u-resetSpectrum  .ui-caps {color: rgba(0, 0, 0, 0.6) !important; fill: rgba(0, 0, 0, 0.6) !important;}
.u-resetSpectrum  .ui-summary,.u-resetSpectrum  .ui-caption {color: rgba(0, 0, 0, 0.2980392156862745) !important; fill: rgba(0, 0, 0, 0.2980392156862745) !important;}
.u-resetSpectrum .u-accentColor--borderLight {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderNormal {border-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--borderDark {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconLight .svgIcon,.u-resetSpectrum .u-accentColor--iconLight.svgIcon {fill: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--iconNormal .svgIcon,.u-resetSpectrum .u-accentColor--iconNormal.svgIcon {fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--iconDark .svgIcon,.u-resetSpectrum .u-accentColor--iconDark.svgIcon {fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--hoverTextNormal:hover {color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--textNormal.u-accentColor--textDarken:hover {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--textDark {color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundLight {background-color: rgba(2, 184, 117, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundNormal {background-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--backgroundDark {background-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark {border-color: rgba(0, 171, 107, 1) !important; color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark:hover {border-color: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark .icon:before,.u-resetSpectrum .u-accentColor--buttonDark .svgIcon{color: rgba(28, 153, 99, 1) !important; fill: rgba(28, 153, 99, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal:not(.clapButton--largePill) {border-color: rgba(2, 184, 117, 1) !important; color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal:hover {border-color: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal .svgIcon{color: rgba(0, 171, 107, 1) !important; fill: rgba(0, 171, 107, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .icon:before,.u-resetSpectrum .u-accentColor--buttonNormal.button--filled .svgIcon{color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonDark.button--filled,.u-resetSpectrum .u-accentColor--buttonDark.button--withChrome.is-active,.u-resetSpectrum .u-accentColor--fillWhenActive.is-active {background-color: rgba(28, 153, 99, 1) !important; border-color: rgba(28, 153, 99, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .u-accentColor--buttonNormal.button--filled:not(.clapButton--largePill),.u-resetSpectrum .u-accentColor--buttonNormal.button--withChrome.is-active:not(.clapButton--largePill) {background-color: rgba(0, 171, 107, 1) !important; border-color: rgba(0, 171, 107, 1) !important; color: rgba(255, 255, 255, 1) !important; fill: rgba(255, 255, 255, 1) !important;}
.u-resetSpectrum .postArticle.is-withAccentColors .markup--user,.u-resetSpectrum .postArticle.is-withAccentColors .markup--query {color: rgba(0, 171, 107, 1) !important;}</style></div></div></div><div class="loadingBar"></div><script>// <![CDATA[
window["obvInit"] = function (opt_embedded) {window["obvInit"]["embedded"] = opt_embedded; window["obvInit"]["ready"] = true;}
// ]]></script><script>// <![CDATA[
var GLOBALS = {"audioUrl":"https://d1fcbxp97j4nb2.cloudfront.net","baseUrl":"https://medium.freecodecamp.org","buildLabel":"32872-795da92","currentUser":{"userId":"lo_ORScxfT4HOgt","isVerified":false,"subscriberEmail":"","hasPastMemberships":false,"isEnrolledInHightower":false,"isEligibleForHightower":false,"hightowerLastLockedAt":0},"currentUserHasUnverifiedEmail":false,"isAuthenticated":false,"isCurrentUserVerified":false,"language":"en","mediumTwitterScreenName":"medium","miroUrl":"https://cdn-images-1.medium.com","moduleUrls":{"base":"https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.-eAJB51rkiik4EbjYXYtLg.js","common-async":"https://cdn-static-1.medium.com/_/fp/gen-js/main-common-async.bundle.X3LYU89j4yNLZhRxGqkw4w.js","hightower":"https://cdn-static-1.medium.com/_/fp/gen-js/main-hightower.bundle.m2Y_waOPKfZICBUVPQ9TUg.js","home-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-home-screens.bundle.f022gPaDf6zRYUyymOZxdA.js","misc-screens":"https://cdn-static-1.medium.com/_/fp/gen-js/main-misc-screens.bundle.QCw4ttb1GB0ZhIf62P35Mw.js","notes":"https://cdn-static-1.medium.com/_/fp/gen-js/main-notes.bundle.Z4_7-EqV4gcAZE99bH1edg.js","payments":"https://cdn-static-1.medium.com/_/fp/gen-js/main-payments.bundle.QqbBLiN_XuqSLohzdx28oQ.js","posters":"https://cdn-static-1.medium.com/_/fp/gen-js/main-posters.bundle.ilm7cwv09Pp61mmzVCW4sg.js","power-readers":"https://cdn-static-1.medium.com/_/fp/gen-js/main-power-readers.bundle.6-fTK7Wk6Afx4itPFljbJw.js","pubs":"https://cdn-static-1.medium.com/_/fp/gen-js/main-pubs.bundle.QcD3AHPt092xp-lF8wJeMQ.js","stats":"https://cdn-static-1.medium.com/_/fp/gen-js/main-stats.bundle.V6aRnq65sLrZNzRNXB27LA.js"},"previewConfig":{"weightThreshold":1,"weightImageParagraph":0.51,"weightIframeParagraph":0.8,"weightTextParagraph":0.08,"weightEmptyParagraph":0,"weightP":0.003,"weightH":0.005,"weightBq":0.003,"minPTextLength":60,"truncateBoundaryChars":20,"detectTitle":true,"detectTitleLevThreshold":0.15},"productName":"Medium","supportsEdit":true,"termsUrl":"//medium.com/policy/9db0094a1e0f","textshotHost":"textshot.medium.com","transactionId":"1520351262038:d9be9ab7a558","useragent":{"browser":"chrome","family":"chrome","os":"mac","version":64,"supportsDesktopEdit":true,"supportsInteract":true,"supportsView":true,"isMobile":false,"isTablet":false,"isNative":false,"supportsFileAPI":true,"isTier1":true,"clientVersion":"","unknownParagraphsBad":false,"clientChannel":"","supportsRealScrollEvents":true,"supportsVhUnits":true,"ruinsViewportSections":false,"supportsHtml5Video":true,"supportsMagicUnderlines":true,"isWebView":false,"isFacebookWebView":false,"supportsProgressiveMedia":true,"supportsPromotedPosts":true,"isBot":false,"isNativeIphone":false,"supportsCssVariables":true,"supportsVideoSections":true,"emojiSupportLevel":5,"isSearchBot":false,"supportsScrollableMetabar":true},"variants":{"allow_access":true,"allow_signup":true,"allow_test_auth":"disallow","signin_services":"twitter,facebook,google,email,google-fastidv","signup_services":"twitter,facebook,google,email,google-fastidv","android_rating_prompt_recommend_threshold":5,"google_sign_in_android":true,"reengagement_notification_duration":3,"browsable_stream_config_bucket":"curated-topics","enable_series_creation":true,"enable_your_series_pages":true,"enable_productionized_series":true,"enable_dedicated_series_tab_api_ios":true,"enable_clap_milestone_notifications":true,"enable_series_stats_page":true,"enable_post_import":true,"enable_sponsored_post_labelling":true,"enable_logged_in_follow_on_collection_post":true,"enable_export_members":true,"enable_series_card_background_creation":true,"available_monthly_plan":"60e220181034","available_annual_plan":"2c754bcc2995","enable_sms":true,"is_not_medium_subscriber":true,"disable_followed_tag_fan_out":true,"enable_glyph":true,"glyph_font_set":"m2","enable_branding":true,"enable_branding_fonts":true,"enable_branding_buttons":true,"enable_sequence_carousel":true,"enable_multirecommends":true,"enable_view_new_collection_writers_manager":true,"enable_post_monger_v2":true,"enable_user_post_metering":true,"max_premium_content_per_user_under_metering":3,"tag_intercom_user_on_metering_count":3,"enable_topic_writer_onboarding":true,"enable_algolia_search_reporting":true,"enable_strong_graph_chp_reorder":true,"enable_unsplash_images":true,"enable_top_stories_for_you":true,"enable_ios_member_post_labeling":true,"enable_featured_hero":true,"enable_li_search_collection":true,"enable_audio_playlists":true,"enable_homepage_remodel":true,"enable_signin_wall_custom_domain":true,"enable_standalone_profile_edit_page":true,"enable_standalone_user_follow_pages":true,"enable_post_footer_copy":true,"app_download_email_template":"control","enable_bloomd_double_write":true,"enable_bloomd_sharding":true,"enable_hack_series_web":true,"disable_digest_deep_social_provider":true,"enable_logged_in_payment_flow_upgrade_lp":true,"enable_elevate_sequence":true,"enable_editors_picks_notifications":true,"enable_marketing_emails":true,"enable_eu_butter_bar":true,"increase_editor_recs_12_days":5,"enable_digest_new_user_note":true},"xsrfToken":"","iosAppId":"828256236","supportEmail":"yourfriends@medium.com","fp":{"/icons/monogram-mask.svg":"https://cdn-static-1.medium.com/_/fp/icons/monogram-mask.KPLCSFEZviQN0jQ7veN2RQ.svg","/icons/favicon-dev-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-dev-editor.YKKRxBO8EMvIqhyCwIiJeQ.ico","/icons/favicon-hatch-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-hatch-editor.BuEyHIqlyh2s_XEk4Rl32Q.ico","/icons/favicon-medium-editor.ico":"https://cdn-static-1.medium.com/_/fp/icons/favicon-medium-editor.PiakrZWB7Yb80quUVQWM6g.ico"},"authBaseUrl":"https://medium.com","imageUploadSizeMb":25,"isAuthDomainRequest":false,"domainCollectionSlug":"free-code-camp","algoliaApiEndpoint":"https://MQ57UUUQZ2-dsn.algolia.net","algoliaAppId":"MQ57UUUQZ2","algoliaSearchOnlyApiKey":"394474ced050e3911ae2249ecc774921","iosAppStoreUrl":"https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&mt=8","iosAppLinkBaseUrl":"medium:","algoliaIndexPrefix":"medium_","androidPlayStoreUrl":"https://play.google.com/store/apps/details?id=com.medium.reader","googleClientId":"216296035834-k1k6qe060s2tp2a2jam4ljdcms00sttg.apps.googleusercontent.com","androidPackage":"com.medium.reader","androidPlayStoreMarketScheme":"market://details?id=com.medium.reader","googleAuthUri":"https://accounts.google.com/o/oauth2/auth","androidScheme":"medium","layoutData":{"useDynamicScripts":false,"googleAnalyticsTrackingCode":"UA-24232453-2","jsShivUrl":"https://cdn-static-1.medium.com/_/fp/js/shiv.RI2ePTZ5gFmMgLzG5bEVAA.js","useDynamicCss":false,"faviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium.3Y6xpZ-0FSdWDnPM3hSBIA.ico","faviconImageId":"1*8I-HPL0bfoIzGied-dzOvA.png","fontSets":[{"id":8,"url":"https://glyph.medium.com/css/e/sr/latin/e/ssr/latin/e/ssb/latin/m2.css"},{"id":9,"url":"https://glyph.medium.com/css/mkt.css"},{"id":10,"url":"https://glyph.medium.com/css/elv8.css"}],"editorFaviconUrl":"https://cdn-static-1.medium.com/_/fp/icons/favicon-rebrand-medium-editor.3Y6xpZ-0FSdWDnPM3hSBIA.ico","glyphUrl":"https://glyph.medium.com"},"authBaseUrlRev":"moc.muidem//:sptth","isDnt":false,"stripePublishableKey":"pk_live_7FReX44VnNIInZwrIIx6ghjl","archiveUploadSizeMb":100,"paymentData":{"currencies":{"1":{"label":"US Dollar","external":"usd"}},"countries":{"1":{"label":"United States of America","external":"US"}},"accountTypes":{"1":{"label":"Individual","external":"individual"},"2":{"label":"Company","external":"company"}}},"previewConfig2":{"weightThreshold":1,"weightImageParagraph":0.05,"raiseImage":true,"enforceHeaderHierarchy":true,"isImageInsetRight":true},"isAmp":false,"iosScheme":"medium","isSwBoot":false,"lightstep":{"accessToken":"ce5be895bef60919541332990ac9fef2","carrier":"{\"ot-tracer-spanid\":\"0b9d52616d4505da\",\"ot-tracer-traceid\":\"269044dd7bef75d5\",\"ot-tracer-sampled\":\"true\"}","host":"collector-medium.lightstep.com"},"facebook":{"key":"542599432471018","namespace":"medium-com","scope":{"default":["public_profile","email","user_friends"],"connect":["public_profile","email","user_friends"],"login":["public_profile","email","user_friends"],"share":["public_profile","email","user_friends","publish_actions"]}},"mailingListArchiveUploadSizeMb":2,"editorsPicksTopicId":"3985d2a191c5","popularOnMediumTopicId":"9d34e48ecf94","memberContentTopicId":"13d7efd82fb2","audioContentTopicId":"3792abbd134","brandedSequenceId":"7d337ddf1941","isDoNotAuth":false,"goldfinchUrl":"https://goldfinch.medium.com","buggle":{"url":"https://buggle.medium.com","videoUrl":"https://cdn-videos-1.medium.com","audioUrl":"https://cdn-audio-1.medium.com"},"referrerType":5,"isMeteredOut":false,"meterConfig":{"maxUnlockCount":3,"windowLength":"MONTHLY"},"partnerProgramEmail":"partnerprogram@medium.com","userResearchPrompts":[{"promptId":"lo_post_page_4","type":0,"url":"www.calendly.com"},{"promptId":"lo_home_page","type":1,"url":"www.calendly.com"},{"promptId":"lo_profile_page","type":2,"url":"www.calendly.com"}],"recaptchaKey":"6LdAokEUAAAAAC7seICd4vtC8chDb3jIXDQulyUJ","paypalClientMode":"production","signinWallCustomDomainCollectionIds":["3a8144eabfe3"],"countryCode":"DE"}
// ]]></script><script charset="UTF-8" src="https://cdn-static-1.medium.com/_/fp/gen-js/main-base.bundle.-eAJB51rkiik4EbjYXYtLg.js" async></script><script>// <![CDATA[
window["obvInit"]({"value":{"id":"4bd97d4fbaba","versionId":"aaf946156313","creatorId":"536515a4b25d","creator":{"userId":"536515a4b25d","name":"Peter Gleeson","username":"petergleeson1","createdAt":1470000206625,"lastPostCreatedAt":1518565199411,"imageId":"1*jYH_43uKbwiZhfXddHE1BQ.jpeg","backgroundImageId":"","bio":"Writer on topics in data science, statistics and programming","twitterScreenName":"","socialStats":{"userId":"536515a4b25d","usersFollowedCount":252,"usersFollowedByCount":4265,"type":"SocialStats"},"social":{"userId":"lo_ORScxfT4HOgt","targetUserId":"536515a4b25d","type":"Social"},"facebookAccountId":"","allowNotes":1,"isNsfw":false,"type":"User"},"homeCollection":{"id":"336d898217ee","name":"freeCodeCamp","slug":"free-code-camp","tags":["TECHNOLOGY","DESIGN","TECH","STARTUP","PRODUCTIVITY"],"creatorId":"8b318225c16a","description":"Our community publishes stories worth reading on development, design, and data science.","shortDescription":"Our community publishes stories worth reading on…","image":{"imageId":"1*MotlWcSa2n6FrOx3ul89kw.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":395210,"activeAt":1520335416111},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*wViBNJ1o9rM5p6b-gf3vxg.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"freecodecamp","facebookPageName":"freecodecamp","publicEmail":"quincy@freecodecamp.com","collectionMastheadId":"af94c9c16d4","domain":"medium.freecodecamp.org","sections":[{"type":2,"collectionHeaderMetadata":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":["dbae61681cf0"]}},{"type":1,"postListMetadata":{"source":1,"layout":6,"number":25,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":6,"number":25,"postIds":[],"sectionHeader":"Trending"}}],"tintColor":"#FF006400","lightText":true,"favicon":{"imageId":"1*B6_f-_SxscJ9FCuIjOrQAQ.jpeg","filter":"","backgroundSize":"","originalWidth":657,"originalHeight":654,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF429A35","point":0},{"color":"#FF408F33","point":0.1},{"color":"#FF3E8432","point":0.2},{"color":"#FF3B7830","point":0.3},{"color":"#FF376C2D","point":0.4},{"color":"#FF33602A","point":0.5},{"color":"#FF2E5426","point":0.6},{"color":"#FF284721","point":0.7},{"color":"#FF223A1C","point":0.8},{"color":"#FF1A2C15","point":0.9},{"color":"#FF111E0D","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF006400","point":0},{"color":"#FF2A7920","point":0.1},{"color":"#FF458C39","point":0.2},{"color":"#FF5D9E50","point":0.3},{"color":"#FF74AF66","point":0.4},{"color":"#FF8ABF7C","point":0.5},{"color":"#FFA0CE92","point":0.6},{"color":"#FFB5DDA8","point":0.7},{"color":"#FFCAEBBE","point":0.8},{"color":"#FFDFF8D4","point":0.9},{"color":"#FFF3FFEA","point":1}],"backgroundColor":"#FF006400"},"highlightSpectrum":{"colorPoints":[{"color":"#FFE3FBD9","point":0},{"color":"#FFDEFAD3","point":0.1},{"color":"#FFD9FACC","point":0.2},{"color":"#FFD3F9C6","point":0.3},{"color":"#FFCEF9C0","point":0.4},{"color":"#FFC9F8B9","point":0.5},{"color":"#FFC3F8B3","point":0.6},{"color":"#FFBDF7AD","point":0.7},{"color":"#FFB8F7A6","point":0.8},{"color":"#FFB2F6A0","point":0.9},{"color":"#FFACF699","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Dev","tagSlug":"web-development","url":"https://medium.freecodecamp.org/tagged/web-development","source":"tagSlug"},{"type":1,"title":"Design","tagSlug":"design","url":"https://medium.freecodecamp.org/tagged/design","source":"tagSlug"},{"type":1,"title":"Data","tagSlug":"data-science","url":"https://medium.freecodecamp.org/tagged/data-science","source":"tagSlug"},{"type":3,"title":"Learn to code for free","url":"https://freecodecamp.com?ref=mn"}],"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"googleAnalyticsId":"UA-55446531-3","ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4},"type":"Collection"},"homeCollectionId":"336d898217ee","title":"How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms","detectedLanguage":"en","latestVersion":"aaf946156313","latestPublishedVersion":"aaf946156313","hasUnpublishedEdits":true,"latestRev":3667,"createdAt":1489150171104,"updatedAt":1520342130241,"acceptedAt":0,"firstPublishedAt":1490719447640,"latestPublishedAt":1492043252072,"vote":false,"experimentalCss":"","displayAuthor":"","content":{"subtitle":"Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize…","bodyModel":{"paragraphs":[{"name":"0dcc","type":3,"text":"How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms","markups":[]},{"name":"a5ea","type":4,"text":"","markups":[],"layout":5,"metadata":{"id":"1*dT8VX9g8ig6lxmobTRmCiA.jpeg","originalWidth":3892,"originalHeight":2242}},{"name":"3329","type":1,"text":"Take a look at the image below. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize them by similarity into a number of groups.","markups":[]},{"name":"941a","type":1,"text":"This isn’t a trick question. Start with grouping the spiders together.","markups":[]},{"name":"f1a2","type":4,"text":"Images via Google Image Search, labelled for reuse","markups":[],"layout":3,"metadata":{"id":"1*Bm4uiBY1JEt6Z-vOme_fTQ.png","originalWidth":1085,"originalHeight":519,"isFeatured":true}},{"name":"2fa8","type":1,"text":"Done? While there’s not necessarily a “correct” answer here, it’s most likely you split the bugs into four clusters. The spiders in one cluster, the pair of snails in another, the butterflies and moth into one, and the trio of wasps and bees into one more.","markups":[{"type":2,"start":107,"end":115}]},{"name":"3c8e","type":1,"text":"That wasn’t too bad, was it? You could probably do the same with twice as many bugs, right? If you had a bit of time to spare — or a passion for entomology — you could probably even do the same with a hundred bugs.","markups":[]},{"name":"376c","type":1,"text":"For a machine though, grouping ten objects into however many meaningful clusters is no small task, thanks to a mind-bending branch of maths called combinatorics, which tells us that are 115,975 different possible ways you could have grouped those ten insects together. Had there been twenty bugs, there would have been over fifty trillion possible ways of clustering them.","markups":[{"type":3,"start":147,"end":160,"href":"https://en.wikipedia.org/wiki/Bell_number","title":"","rel":"","anchorType":0},{"type":3,"start":319,"end":338,"href":"https://www.wolframalpha.com/input/?i=bell%27s+number+(20)","title":"","rel":"","anchorType":0}]},{"name":"2d04","type":1,"text":"With a hundred bugs — there’d be many times more solutions than there are particles in the known universe. How many times more? By my calculation, approximately five hundred million billion billion times more. In fact, there are more than four million billion googol solutions (what’s a googol?). For just a hundred objects.","markups":[{"type":3,"start":74,"end":105,"href":"https://www.wolframalpha.com/input/?i=particles+in+universe","title":"","rel":"","anchorType":0},{"type":3,"start":161,"end":208,"href":"https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+number+of+particles+in+universe","title":"","rel":"","anchorType":0},{"type":3,"start":239,"end":266,"href":"https://www.wolframalpha.com/input/?i=BellB%5B100%5D+%2F+googol","title":"","rel":"","anchorType":0},{"type":3,"start":278,"end":294,"href":"https://www.wolframalpha.com/input/?i=googol","title":"","rel":"","anchorType":0},{"type":2,"start":260,"end":266}]},{"name":"4152","type":1,"text":"Almost all of those solutions would be meaningless — yet from that unimaginable number of possible choices, you pretty quickly found one of the very few that clustered the bugs in a useful way.","markups":[]},{"name":"93b1","type":1,"text":"Us humans take it for granted how good we are categorizing and making sense of large volumes of data pretty quickly. Whether it’s a paragraph of text, or images on a screen, or a sequence of objects — humans are generally fairly efficient at making sense of whatever data the world throws at us.","markups":[]},{"name":"64d2","type":1,"text":"Given that a key aspect of developing A.I. and Machine Learning is getting machines to quickly make sense of large sets of input data, what shortcuts are there available? Here, you can read about three clustering algorithms that machines can use to quickly make sense of large datasets. This is by no means an exhaustive list — there are other algorithms out there — but they represent a good place to start!","markups":[]},{"name":"f64e","type":1,"text":"You’ll find for each a quick summary of when you might use them, a brief overview of how they work, and a more detailed, step-by-step worked example. I believe it helps to understand an algorithm by actually carrying out yourself. If you’re really keen, you’ll find the best way to do this is with pen and paper. Go ahead — nobody will judge!","markups":[{"type":2,"start":241,"end":252}]},{"name":"2386","type":4,"text":"Three suspiciously neat clusters, with K = 3","markups":[],"layout":1,"metadata":{"id":"1*4asJtK2DB-rdoMxNMWyrZw.png","originalWidth":1180,"originalHeight":776}},{"name":"c662","type":3,"text":"K-means clustering","markups":[]},{"name":"cf9b","type":13,"text":"Use when:","markups":[{"type":1,"start":0,"end":9},{"type":2,"start":0,"end":9}]},{"name":"bbf1","type":1,"text":"…you have an idea of how many groups you’re expecting to find a priori.","markups":[{"type":2,"start":62,"end":70}]},{"name":"71dc","type":13,"text":"How it works:","markups":[{"type":1,"start":0,"end":13},{"type":2,"start":0,"end":13}]},{"name":"ad35","type":1,"text":"The algorithm randomly assigns each observation into one of k categories, then calculates the mean of each category. Next, it reassigns each observation to the category with the closest mean before recalculating the means. This step repeats over and over until no more reassignments are necessary.","markups":[{"type":2,"start":60,"end":62},{"type":2,"start":94,"end":98}]},{"name":"6699","type":13,"text":"Worked Example:","markups":[{"type":1,"start":0,"end":15},{"type":2,"start":0,"end":15}]},{"name":"cd33","type":1,"text":"Take a group of 12 football (or ‘soccer’) players who have each scored a certain number of goals this season (say in the range 3–30). Let’s divide them into separate clusters — say three.","markups":[]},{"name":"597a","type":1,"text":"Step 1 requires us to randomly split the players into three groups and calculate the means of each.","markups":[{"type":1,"start":0,"end":7}]},{"name":"8aeb","type":8,"text":"Group 1\nPlayer A (5 goals), Player B (20 goals), Player C (11 goals) \nGroup Mean = (5 + 20 + 11) / 3 = 12","markups":[{"type":1,"start":0,"end":8},{"type":1,"start":70,"end":105}]},{"name":"b753","type":8,"text":"Group 2\nPlayer D (5 goals), Player E (3 goals), Player F (19 goals)\nGroup Mean = 9","markups":[{"type":1,"start":0,"end":8},{"type":1,"start":68,"end":82}]},{"name":"37d3","type":8,"text":"Group 3\nPlayer G (30 goals), Player H (3 goals), Player I (15 goals)\nGroup Mean = 16","markups":[{"type":1,"start":0,"end":8},{"type":1,"start":69,"end":84}]},{"name":"e597","type":1,"text":"Step 2: For each player, reassign them to the group with the closest mean. E.g., Player A (5 goals) is assigned to Group 2 (mean = 9). Then recalculate the group means.","markups":[{"type":1,"start":0,"end":8}]},{"name":"7025","type":8,"text":"Group 1 (Old Mean = 12)\nPlayer C (11 goals) \nNew Mean = 11","markups":[{"type":1,"start":0,"end":24},{"type":1,"start":45,"end":58}]},{"name":"eb82","type":8,"text":"Group 2 (Old Mean = 9)\nPlayer A (5 goals), Player D (5 goals), Player E (3 goals), Player H (3 goals)\nNew Mean = 4","markups":[{"type":1,"start":0,"end":23},{"type":1,"start":102,"end":114}]},{"name":"7542","type":8,"text":"Group 3 (Old Mean = 16)\nPlayer G (30 goals), Player I (15 goals), Player B (20 goals), Player F (19 goals)\nNew Mean = 21","markups":[{"type":1,"start":0,"end":24},{"type":1,"start":107,"end":120}]},{"name":"dbda","type":1,"text":"Repeat Step 2 over and over until the group means no longer change. For this somewhat contrived example, this happens on the next iteration. Stop! You have now formed three clusters from the dataset!","markups":[{"type":1,"start":0,"end":6},{"type":1,"start":141,"end":146}]},{"name":"b6c7","type":8,"text":"Group 1 (Old Mean = 11)\nPlayer C (11 goals), Player I (15 goals)\nFinal Mean = 13","markups":[{"type":1,"start":0,"end":24},{"type":1,"start":65,"end":80}]},{"name":"d3b7","type":8,"text":"Group 2 (Old Mean = 4)\nPlayer A (5 goals), Player D (5 goals), Player E (3 goals), Player H (3 goals)\nFinal Mean = 4","markups":[{"type":1,"start":0,"end":23},{"type":1,"start":102,"end":116}]},{"name":"d581","type":8,"text":"Group 3 (Old Mean = 21)\nPlayer G (30 goals), Player B (20 goals), Player F (19 goals)\nFinal Mean = 23","markups":[{"type":1,"start":0,"end":24},{"type":1,"start":86,"end":101}]},{"name":"8b03","type":1,"text":"With this example, the clusters could correspond to the players’ positions on the field — such as defenders, midfielders and attackers. K-means works here because we could have reasonably expected the data to fall naturally into these three categories.","markups":[]},{"name":"300f","type":1,"text":"In this way, given data on a range of performance statistics, a machine could do a reasonable job of estimating the positions of players from any team sport — useful for sports analytics, and indeed any other purpose where classification of a dataset into predefined groups can provide relevant insights.","markups":[]},{"name":"27e9","type":13,"text":"Finer details:","markups":[{"type":1,"start":0,"end":14},{"type":2,"start":0,"end":14}]},{"name":"7aa0","type":1,"text":"There are several variations on the algorithm described here. The initial method of ‘seeding’ the clusters can be done in one of several ways. Here, we randomly assigned every player into a group, then calculated the group means. This causes the initial group means to tend towards being similar to one another, which ensures greater repeatability.","markups":[]},{"name":"0e60","type":1,"text":"An alternative is to seed the clusters with just one player each, then start assigning players to the nearest cluster. The returned clusters are more sensitive to the initial seeding step, reducing repeatability in highly variable datasets. However, this approach may reduce the number of iterations required to complete the algorithm, as the groups will take less time to diverge.","markups":[]},{"name":"bd3d","type":1,"text":"An obvious limitation to K-means clustering is that you have to provide a priori assumptions about how many clusters you’re expecting to find. There are methods to assess the fit of a particular set of clusters. For example, the Within-Cluster Sum-of-Squares is a measure of the variance within each cluster. The ‘better’ the clusters, the lower the overall WCSS.","markups":[{"type":3,"start":244,"end":258,"href":"https://en.wikipedia.org/wiki/Partition_of_sums_of_squares","title":"","rel":"","anchorType":0},{"type":2,"start":72,"end":80},{"type":2,"start":229,"end":258}]},{"name":"acbe","type":3,"text":"Hierarchical clustering","markups":[]},{"name":"1eb8","type":13,"text":"Use when:","markups":[{"type":1,"start":0,"end":9},{"type":2,"start":0,"end":9}]},{"name":"26af","type":1,"text":"…you wish to uncover the underlying relationships between your observations.","markups":[]},{"name":"a79b","type":13,"text":"How it works:","markups":[{"type":1,"start":0,"end":13},{"type":2,"start":0,"end":13}]},{"name":"6625","type":1,"text":"A distance matrix is computed, where the value of cell (i, j) is a distance metric between observations i and j. Then, pair the closest two observations and calculate their average. Form a new distance matrix, merging the paired observations into a single object. From this distance matrix, pair up the closest two observations and calculate their average. Repeat until all observations are grouped together.","markups":[{"type":2,"start":56,"end":62},{"type":2,"start":104,"end":106},{"type":2,"start":110,"end":111}]},{"name":"5028","type":13,"text":"Worked example:","markups":[{"type":1,"start":0,"end":14},{"type":2,"start":0,"end":14}]},{"name":"6bb0","type":1,"text":"Here’s a super-simplified dataset about a selection of whale and dolphin species. As a trained biologist, I can assure you we normally use much more detailed datasets for things like reconstructing phylogeny. For now though, we’ll just look at the typical body lengths for these six species. We’ll be using just two repeated steps.","markups":[{"type":3,"start":183,"end":207,"href":"https://en.wikipedia.org/wiki/Phylogenetic_tree","title":"","rel":"","anchorType":0}]},{"name":"fa19","type":8,"text":"Species          Initials  Length(m)\nBottlenose Dolphin     BD        3.0\nRisso's Dolphin        RD        3.6\nPilot Whale            PW        6.5\nKiller Whale           KW        7.5\nHumpback Whale         HW       15.0\nFin Whale              FW       20.0","markups":[{"type":1,"start":0,"end":36}]},{"name":"0611","type":1,"text":"Step 1: compute a distance matrix between each species. Here, we’ll use the Euclidean distance — how far apart are the data points? Read this exactly as you would a distance chart in a road atlas. The difference in length between any pair of species can be looked up by reading the value at the intersection of the relevant row and column.","markups":[{"type":3,"start":76,"end":95,"href":"https://en.wikipedia.org/wiki/Euclidean_distance","title":"","rel":"","anchorType":0},{"type":1,"start":0,"end":8}]},{"name":"68e7","type":8,"text":"    BD   RD   PW   KW   HW\nRD  0.6                    \nPW  3.5  2.9               \nKW  4.5  3.9  1.0          \nHW 12.0 11.4  8.5  7.5     \nFW 17.0 16.4 13.5 12.5  5.0","markups":[{"type":1,"start":0,"end":26},{"type":1,"start":27,"end":30},{"type":1,"start":55,"end":58},{"type":1,"start":83,"end":86},{"type":1,"start":111,"end":114},{"type":1,"start":139,"end":142}]},{"name":"7109","type":1,"text":"Step 2: Pair up the two closest species. Here, this will be the Bottlenose & Risso’s Dolphins, with an average length of 3.3m.","markups":[{"type":1,"start":0,"end":8}]},{"name":"d409","type":1,"text":"Repeat Step 1 by recalculating the distance matrix, but this time merge the Bottlenose & Risso’s Dolphins into a single object with length 3.3m.","markups":[{"type":1,"start":0,"end":6}]},{"name":"4cbb","type":8,"text":"    [BD, RD]   PW   KW   HW\nPW       3.2               \nKW       4.2   1.0          \nHW      11.7   8.5  7.5     \nFW      16.7  13.5 12.5  5.0","markups":[{"type":1,"start":4,"end":27},{"type":1,"start":28,"end":30},{"type":1,"start":56,"end":58},{"type":1,"start":85,"end":87},{"type":1,"start":114,"end":116}]},{"name":"77af","type":1,"text":"Next, repeat Step 2 with this new distance matrix. Here, the smallest distance is between the Pilot & Killer Whales, so we pair them up and take their average — which gives us 7.0m.","markups":[{"type":1,"start":0,"end":4}]},{"name":"047f","type":1,"text":"Then, we repeat Step 1 — recalculate the distance matrix, but now we’ve merged the Pilot & Killer Whales into a single object of length 7.0m.","markups":[{"type":1,"start":0,"end":4}]},{"name":"8e34","type":8,"text":"         [BD, RD] [PW, KW]   HW\n[PW, KW]      3.7              \nHW           11.7      8.0     \nFW           16.7     13.0   5.0","markups":[{"type":1,"start":9,"end":31},{"type":1,"start":32,"end":40},{"type":1,"start":64,"end":66},{"type":1,"start":96,"end":98}]},{"name":"da48","type":1,"text":"Next, we repeat Step 2 with this distance matrix. The smallest distance (3.7m) is between the two merged objects — so now we merge them into an even bigger object, and take the average (which is 5.2m).","markups":[{"type":1,"start":0,"end":4}]},{"name":"d16c","type":1,"text":"Then, we repeat Step 1 and compute a new distance matrix, having merged the Bottlenose & Risso’s Dolphins with the Pilot & Killer Whales.","markups":[{"type":1,"start":0,"end":4}]},{"name":"0a32","type":8,"text":"   [[BD, RD] , [PW, KW]]    HW\nHW                   9.8    \nFW                  14.8   5.0","markups":[{"type":1,"start":3,"end":30},{"type":1,"start":31,"end":34},{"type":1,"start":60,"end":62}]},{"name":"cf09","type":1,"text":"Next, we repeat Step 2. The smallest distance (5.0m) is between the Humpback & Fin Whales, so we merge them into a single object, and take the average (17.5m).","markups":[{"type":1,"start":0,"end":4}]},{"name":"a88d","type":1,"text":"Then, it’s back to Step 1 — compute the distance matrix, having merged the Humpback & Fin Whales.","markups":[{"type":1,"start":0,"end":4}]},{"name":"c60d","type":8,"text":"         [[BD, RD] , [PW, KW]]\n[HW, FW]                  12.3","markups":[{"type":1,"start":9,"end":30},{"type":1,"start":31,"end":39}]},{"name":"3ec3","type":1,"text":"Finally, we repeat Step 2 — there is only one distance (12.3m) in this matrix, so we pair everything into one big object, and now we can stop! Let’s look at the final merged object:","markups":[{"type":1,"start":0,"end":8},{"type":1,"start":137,"end":142}]},{"name":"5548","type":8,"text":"[[[BD, RD],[PW, KW]],[HW, FW]]","markups":[]},{"name":"3fa2","type":1,"text":"It has a nested structure (think JSON), which allows it to be drawn up as a tree-like graph, or dendrogram. It reads in much the same way a family tree might. The nearer two observations are on the tree, the more similar or closely-related they are taken to be.","markups":[{"type":3,"start":33,"end":37,"href":"http://json.org/example.html","title":"","rel":"","anchorType":0},{"type":2,"start":96,"end":106}]},{"name":"a48d","type":4,"text":"A no-frills dendrogram generated at R-Fiddle.org","markups":[{"type":3,"start":36,"end":48,"href":"http://www.r-fiddle.org/#","title":"","rel":"","anchorType":0}],"layout":1,"metadata":{"id":"1*jwd6EHmjOtkH9RiQSJ_ZnQ.png","originalWidth":480,"originalHeight":480}},{"name":"e2dc","type":1,"text":"The structure of the dendrogram gives us insight into how our dataset is structured. In our example, we see two main branches, with Humpback Whale and Fin Whale on one side, and the Bottlenose Dolphin/Risso’s Dolphin and Pilot Whale/Killer Whale on the other.","markups":[]},{"name":"5b08","type":1,"text":"In evolutionary biology, much larger datasets with many more specimens and measurements are used in this way to infer taxonomic relationships between them. Outside of biology, hierarchical clustering has applications in Data Mining and Machine Learning contexts.","markups":[]},{"name":"a111","type":1,"text":"The cool thing is that this approach requires no assumptions about the number of clusters you’re looking for. You can split the returned dendrogram into clusters by “cutting” the tree at a given height. This height can be chosen in a number of ways, depending on the resolution at which you wish to cluster the data.","markups":[]},{"name":"c890","type":1,"text":"For instance, looking at the dendrogram above, if we draw a horizontal line at height = 10, we’d intersect the two main branches, splitting the dendrogram into two sub-graphs. If we cut at height = 2, we’d be splitting the dendrogram into three clusters.","markups":[]},{"name":"acf8","type":13,"text":"Finer details:","markups":[{"type":1,"start":0,"end":14},{"type":2,"start":0,"end":14}]},{"name":"a2ce","type":1,"text":"There are essentially three aspects in which hierarchical clustering algorithms can vary to the one given here.","markups":[]},{"name":"bce7","type":1,"text":"Most fundamental is the approach — here, we have used an agglomerative process, whereby we start with individual data points and iteratively cluster them together until we’re left with one large cluster. An alternative (but more computationally intensive) approach is to start with one giant cluster, and then proceed to divide the data into smaller and smaller clusters until you’re left with isolated data points.","markups":[{"type":2,"start":57,"end":70}]},{"name":"acac","type":1,"text":"There are also a range of methods that can be used to calculate the distance matrices. For many purposes, the Euclidean distance (think Pythagoras’ Theorem) will suffice, but there are alternatives that may be more applicable in some circumstances.","markups":[{"type":3,"start":185,"end":197,"href":"https://en.wikipedia.org/wiki/Metric_(mathematics)","title":"","rel":"","anchorType":0}]},{"name":"c65b","type":1,"text":"Finally, the linkage criterion can also vary. Clusters are linked according to how close they are to one another, but the way in which we define ‘close’ is flexible. In the example above, we measured the distances between the means (or ‘centroids’) of each group and paired up the nearest groups. However, you may want to use a different definition.","markups":[{"type":2,"start":13,"end":30}]},{"name":"4ba3","type":1,"text":"For example, each cluster is made up of several discrete points. We could define the distance between two clusters to be the minimum (or maximum) distance between any of their points — as illustrated in the figure below. There are still other ways of defining the linkage criterion, which may be suitable in different contexts.","markups":[]},{"name":"170b","type":4,"text":"Red/Blue: centroid linkage; Red/Green: minimum linkage; Green/Blue: maximum linkage","markups":[],"layout":1,"metadata":{"id":"1*4aWCKqBrD8BbEeiNzc2gwg.png","originalWidth":1156,"originalHeight":648}},{"name":"b664","type":3,"text":"Graph Community Detection","markups":[]},{"name":"f884","type":13,"text":"Use when:","markups":[{"type":1,"start":0,"end":9},{"type":2,"start":0,"end":9}]},{"name":"7a65","type":1,"text":"…you have data that can be represented as a network, or ‘graph’.","markups":[]},{"name":"ed55","type":13,"text":"How it works:","markups":[{"type":1,"start":0,"end":13},{"type":2,"start":0,"end":13}]},{"name":"6e96","type":1,"text":"A graph community is very generally defined as a subset of vertices which are more connected to each other than with the rest of the network. Various algorithms exist to identify communities, based upon more specific definitions. Algorithms include, but are not limited to, Edge Betweenness, Modularity-Maximsation, Walktrap, Clique Percolation, Leading Eigenvector…","markups":[{"type":2,"start":2,"end":17}]},{"name":"f180","type":13,"text":"Worked example:","markups":[{"type":1,"start":0,"end":15},{"type":2,"start":0,"end":15}]},{"name":"6cc8","type":1,"text":"Graph theory, or the mathematical study of networks, is a fascinating branch of mathematics that lets us model complex systems as an abstract collection of ‘dots’ (or vertices) connected by ‘lines’ (or edges).","markups":[{"type":3,"start":0,"end":12,"href":"https://en.wikipedia.org/wiki/Graph_theory","title":"","rel":"","anchorType":0},{"type":2,"start":167,"end":175},{"type":2,"start":202,"end":207}]},{"name":"a226","type":1,"text":"Perhaps the most intuitive case-studies are social networks. Here, the vertices represent people, and edges connect vertices who are friends/followers. However, any system can be modelled as a network if you can justify a method to meaningfully connect different components. Among the more innovative applications of graph theory to clustering include feature extraction from image data, and analysing gene regulatory networks.","markups":[]},{"name":"30e4","type":1,"text":"As an entry-level example, take a look at this quickly put-together graph. It shows the eight websites I most recently visited, linked according to whether their respective Wikipedia articles link out to one another. You could assemble this data manually, but for larger-scale projects, it’s much quicker to write a Python script to do the same. Here’s one I wrote earlier.","markups":[{"type":3,"start":346,"end":372,"href":"https://raw.githubusercontent.com/pg0408/Medium-articles/master/graph_maker.py","title":"","rel":"","anchorType":0}]},{"name":"83ee","type":4,"text":"Graph plotted with ‘igraph’ package for R version 3.3.3","markups":[],"layout":1,"metadata":{"id":"1*qd41Vp7sw98vq4PyxVE_DQ.png","originalWidth":533,"originalHeight":327}},{"name":"3c6b","type":1,"text":"The vertices are colored according to their community membership, and sized according to their centrality. See how Google and Twitter are the most central?","markups":[{"type":2,"start":95,"end":105}]},{"name":"b37e","type":1,"text":"Also, the clusters make pretty good sense in the real-world (always an important performance indicator). The yellow vertices are generally reference/look-up sites; the blue vertices are all used for online publishing (of articles, tweets, or code); and the red vertices include YouTube, which was of course founded by former PayPal employees. Not bad deductions for a machine!","markups":[]},{"name":"4c1c","type":1,"text":"Aside from being a useful way to visualize large systems, the real power of networks comes from their mathematical analysis. Let’s start by translating our nice picture of the network into a more mathematical format. Below is the adjacency matrix of the network.","markups":[{"type":2,"start":230,"end":246}]},{"name":"eb66","type":8,"text":"         GH Gl  M  P  Q  T  W  Y\nGitHub    0  1  0  0  0  1  0  0  \nGoogle    1  0  1  1  1  1  1  1\nMedium    0  1  0  0  0  1  0  0\nPayPal    0  1  0  0  0  1  0  1\nQuora     0  1  0  0  0  1  1  0\nTwitter   1  1  1  1  1  0  0  1\nWikipedia 0  1  0  0  1  0  0  0\nYouTube   0  1  0  1  0  1  0  0","markups":[{"type":1,"start":0,"end":32},{"type":1,"start":33,"end":39},{"type":1,"start":68,"end":74},{"type":1,"start":101,"end":107},{"type":1,"start":134,"end":140},{"type":1,"start":167,"end":173},{"type":1,"start":200,"end":207},{"type":1,"start":233,"end":242},{"type":1,"start":266,"end":273}]},{"name":"7ad5","type":1,"text":"The value at the intersection of each row and column records whether there is an edge between that pair of vertices. For instance, there is an edge between Medium and Twitter (surprise, surprise!), so the value where their rows/columns intersect is 1. Similarly, there is no edge between Medium and PayPal, so the intersection of their rows/columns returns 0.","markups":[]},{"name":"fd3d","type":1,"text":"Encoded within the adjacency matrix are all the properties of this network — it gives us the key to start unlocking all manner of valuable insights. For a start, summing any column (or row) gives you the degree of each vertex — i.e., how many others it is connected to. This is commonly denoted with the letter k.","markups":[{"type":2,"start":204,"end":210},{"type":2,"start":311,"end":312}]},{"name":"7634","type":1,"text":"Likewise, summing the degrees of every vertex and dividing by two gives you L, the number of edges (or ‘links’) in the network. The number of rows/columns gives us N, the number of vertices (or ‘nodes’) in the network.","markups":[{"type":2,"start":76,"end":77},{"type":2,"start":164,"end":165}]},{"name":"bc6b","type":1,"text":"Knowing just k, L, N and the value of each cell in the adjacency matrix A lets us calculate the modularity of any given clustering of the network.","markups":[{"type":3,"start":96,"end":106,"href":"https://en.wikipedia.org/wiki/Modularity_(networks)","title":"","rel":"","anchorType":0},{"type":2,"start":13,"end":14},{"type":2,"start":16,"end":21},{"type":2,"start":72,"end":73},{"type":2,"start":96,"end":107},{"type":2,"start":109,"end":110}]},{"name":"facf","type":1,"text":"Say we’ve clustered the network into a number of communities. We can use the modularity score to assess the ‘quality’ of this clustering. A higher score will show we’ve split the network into ‘accurate’ communities, whereas a low score suggests our clusters are more random than insightful. The image below illustrates this.","markups":[]},{"name":"b803","type":4,"text":"Modularity serves as a measure of the ‘quality’ of a partition.","markups":[],"layout":1,"metadata":{"id":"1*6_kSe1q4nDbvnnghF4yJwA.png","originalWidth":1207,"originalHeight":568}},{"name":"e812","type":1,"text":"Modularity can be calculated using the formula below:","markups":[]},{"name":"9b31","type":4,"text":"","markups":[],"layout":1,"metadata":{"id":"1*LBCtpmSeRnRnDTF7AJ6nBg.png","originalWidth":1238,"originalHeight":460}},{"name":"4d1a","type":1,"text":"That’s a fair amount of math, but we can break it down bit by bit and it’ll make more sense.","markups":[]},{"name":"72c4","type":1,"text":"M is of course what we’re calculating — modularity.","markups":[{"type":2,"start":0,"end":1}]},{"name":"3b54","type":1,"text":"1/2L tells us to divide everything that follows by 2L, i.e., twice the number of edges in the network. So far, so good.","markups":[{"type":2,"start":3,"end":4},{"type":2,"start":52,"end":53}]},{"name":"31c7","type":1,"text":"The Σ symbol tells us we’re summing up everything to the right, and lets us iterate over every row and column in the adjacency matrix A. For those unfamiliar with sum notation, the i, j = 1 and the N work much like nested for-loops in programming. In Python, you’d write it as follows:","markups":[{"type":1,"start":4,"end":6},{"type":2,"start":134,"end":135},{"type":2,"start":181,"end":189},{"type":2,"start":198,"end":199}]},{"name":"7b23","type":8,"text":"sum = 0","markups":[]},{"name":"3514","type":8,"text":"for i in range(1,N):\n    for j in range(1,N):\n        ans = #stuff with i and j as indices\n        sum += ans","markups":[]},{"name":"6114","type":1,"text":"So what is #stuff with i and j in more detail?","markups":[{"type":10,"start":11,"end":30}]},{"name":"1f91","type":1,"text":"Well, the bit in brackets tells us to subtract ( k_i k_j ) / 2L from A_ij.","markups":[{"type":2,"start":49,"end":63},{"type":2,"start":69,"end":73}]},{"name":"4555","type":1,"text":"A_ij is simply the value in the adjacency matrix at row i, column j.","markups":[{"type":2,"start":0,"end":4},{"type":2,"start":56,"end":57},{"type":2,"start":66,"end":67}]},{"name":"1ca6","type":1,"text":"The values of k_i and k_j are the degrees of each vertex — found by adding up the entries in row i and column j respectively. Multiplying these together and dividing by 2L gives us the expected number of edges between vertices i and j if the network were randomly shuffled up.","markups":[{"type":2,"start":14,"end":18},{"type":2,"start":22,"end":25},{"type":2,"start":97,"end":99},{"type":2,"start":110,"end":112},{"type":2,"start":170,"end":172},{"type":2,"start":227,"end":229},{"type":2,"start":233,"end":235}]},{"name":"f5d3","type":1,"text":"Overall, the term in the brackets reveals the difference between the network’s real structure and the expected structure it would have if randomly reassembled. Playing around with the values shows that it returns its highest value when A_ij = 1, and ( k_i k_j ) / 2L is low. This means we see a higher value if there is an ‘unexpected’ edge between vertices i and j.","markups":[{"type":2,"start":236,"end":240},{"type":2,"start":252,"end":267},{"type":2,"start":358,"end":360},{"type":2,"start":364,"end":366}]},{"name":"c769","type":1,"text":"Finally, we multiply the bracketed term by whatever the last few symbols refer to.","markups":[]},{"name":"3f93","type":1,"text":"The 𝛿c_i, c_j is the fancy-sounding but totally harmless Kronecker-delta function. Here it is, explained in Python:","markups":[{"type":2,"start":6,"end":9},{"type":2,"start":11,"end":15},{"type":2,"start":58,"end":82}]},{"name":"1363","type":8,"text":"def Kronecker_Delta(ci, cj):\n    if ci == cj:\n        return 1\n    else:\n        return 0","markups":[]},{"name":"333d","type":8,"text":"Kronecker_Delta(\"A\",\"A\")    #returns 1\nKronecker_Delta(\"A\",\"B\")    #returns 0","markups":[]},{"name":"e32d","type":1,"text":"Yes — it really is that simple. The Kronecker-delta function takes two arguments, and returns 1 if they are identical, otherwise, zero.","markups":[]},{"name":"25d5","type":1,"text":"This means that if vertices i and j have been put in the same cluster, then 𝛿c_i, c_j = 1. Otherwise, if they are in different clusters, the function returns zero.","markups":[{"type":2,"start":27,"end":29},{"type":2,"start":34,"end":36},{"type":2,"start":78,"end":81},{"type":2,"start":83,"end":89}]},{"name":"dc84","type":1,"text":"As we are multiplying the bracketed term by this Kronecker-delta function, we find that for the nested sum Σ, the outcome is highest when there are lots of ‘unexpected’ edges connecting vertices assigned to the same cluster. As such, modularity is a measure of how well-clustered the graph is into separate communities.","markups":[{"type":1,"start":107,"end":108}]},{"name":"7643","type":1,"text":"Dividing by 2L bounds the upper value of modularity at 1. Modularity scores near to or below zero indicate the current clustering of the network is really no use. The higher the modularity, the better the clustering of the network into separate communities. By maximising modularity, we can find the best way of clustering the network.","markups":[{"type":2,"start":12,"end":14}]},{"name":"4f28","type":1,"text":"Notice that we have to pre-define how the graph is clustered to find out how ‘good’ that clustering actually is. Unfortunately, employing brute force to try out every possible way of clustering the graph to find which has the highest modularity score would be computationally impossible beyond a very limited sample size.","markups":[]},{"name":"c430","type":1,"text":"Combinatorics tells us that for a network of just eight vertices, there are 4140 different ways of clustering them. A network twice the size would have over ten billion possible ways of clustering the vertices. Doubling the network again (to a very modest 32 vertices) would give 128 septillion possible ways, and a network of eighty vertices would be cluster-able in more ways than there are atoms in the observable universe.","markups":[{"type":3,"start":0,"end":13,"href":"https://en.wikipedia.org/wiki/Partition_of_a_set#Counting_partitions","title":"","rel":"","anchorType":0},{"type":3,"start":393,"end":425,"href":"https://www.wolframalpha.com/input/?i=991267988808424794443839434655920239360814764000951599022939879419136287216681744888844&lk=1&rawformassumption=%22ClashPrefs%22+-%3E+%7B%22Math%22%7D","title":"","rel":"","anchorType":0}]},{"name":"9fe2","type":1,"text":"Instead, we have to turn to a heuristic method that does a reasonably good job at estimating the clusters that will produce the highest modularity score, without trying out every single possibility. This is an algorithm called Fast-Greedy Modularity-Maximization, and it’s somewhat analogous to the agglomerative hierarchical clustering algorithm describe above. Instead of merging according to distance, ‘Mod-Max’ merges communities according to changes in modularity. Here’s how it goes:","markups":[{"type":2,"start":30,"end":39},{"type":2,"start":227,"end":263}]},{"name":"db81","type":1,"text":"Begin by initially assigning every vertex to its own community, and calculating the modularity of the whole network, M.","markups":[{"type":1,"start":0,"end":5},{"type":2,"start":117,"end":118}]},{"name":"80a1","type":1,"text":"Step 1 requires that for each community pair linked by at least a single edge, the algorithm calculates the resultant change in modularity ΔM if the two communities were merged into one.","markups":[{"type":1,"start":0,"end":7},{"type":2,"start":140,"end":142}]},{"name":"09cd","type":1,"text":"Step 2 then takes the pair of communities that produce the biggest increase in ΔM, which are then merged. Calculate the new modularity M for this clustering, and keep a record of it.","markups":[{"type":1,"start":0,"end":7},{"type":2,"start":80,"end":83},{"type":2,"start":135,"end":137}]},{"name":"8228","type":1,"text":"Repeat steps 1 and 2 — each time merging the pair of communities for which doing so produces the biggest gain in ΔM, then recording the new clustering pattern and its associated modularity score M.","markups":[{"type":1,"start":0,"end":6},{"type":2,"start":114,"end":117},{"type":2,"start":194,"end":196}]},{"name":"80a6","type":1,"text":"Stop when all the vertices are grouped into one giant cluster. Now the algorithm checks the records it kept as it went along, and identifies the clustering pattern that returned the highest value of M. This is the returned community structure.","markups":[{"type":1,"start":0,"end":4},{"type":2,"start":199,"end":200}]},{"name":"3665","type":13,"text":"Finer details:","markups":[{"type":1,"start":0,"end":14},{"type":2,"start":0,"end":14}]},{"name":"37cf","type":1,"text":"Whew! That was computationally intensive, at least for us humans. Graph theory is a rich source of computationally challenging, often NP-hard problems — yet it also has incredible potential to provide valuable insights into complex systems and datasets. Just ask Larry Page, whose eponymous PageRank algorithm — which helped propel Google from start-up to basically world domination in less than a generation — was based entirely in graph theory.","markups":[]},{"name":"8eec","type":1,"text":"Community detection is a major focus of current research in graph theory, and there are plenty of alternatives to Modularity-Maximization, which while useful, does have some drawbacks.","markups":[]},{"name":"7379","type":1,"text":"For a start, its agglomerative approach often sees small, well-defined communities swallowed up into larger ones. This is known as the resolution limit — the algorithm will not find communities below a certain size. Another challenge is that rather than having one distinct, easy-to-reach global peak, the Mod-Max approach actually tends to produce a wide ‘plateau’ of many similar high modularity scores — making it somewhat difficult to truly identify the absolute maximum score.","markups":[{"type":2,"start":135,"end":151}]},{"name":"3c5a","type":1,"text":"Other algorithms use different ways to define and approach community detection. Edge-Betweenness is a divisive algorithm, starting with all vertices grouped in one giant cluster. It proceeds to iteratively remove the least ‘important’ edges in the network, until all vertices are left isolated. This produces a hierarchical structure, with similar vertices closer together in the hierarchy.","markups":[{"type":2,"start":80,"end":96}]},{"name":"dd08","type":1,"text":"Another algorithm is Clique Percolation, which takes into account possible overlap between graph communities. Yet another set of algorithms are based on random-walks across the graph, and then there are spectral clustering methods which start delving into the eigendecomposition of the adjacency matrix and other matrices derived therefrom. These ideas are used in feature extraction in, for example, areas such as Computer Vision.","markups":[{"type":3,"start":153,"end":165,"href":"https://en.wikipedia.org/wiki/Random_walk","title":"","rel":"","anchorType":0},{"type":3,"start":203,"end":222,"href":"https://en.wikipedia.org/wiki/Spectral_clustering","title":"","rel":"","anchorType":0},{"type":2,"start":21,"end":39},{"type":2,"start":203,"end":222}]},{"name":"b391","type":1,"text":"It’d be well beyond the scope of this article to give each algorithm its own in-depth worked example. Suffice to say that this is an active area of research, providing powerful methods to make sense of data that even a generation ago would have been extremely difficult to process.","markups":[]},{"name":"6ec6","type":3,"text":"Conclusion","markups":[]},{"name":"4fee","type":1,"text":"Hopefully this article has informed and inspired you to better understand how machines can make sense of Big Data! The future is a rapidly changing place, and many of those changes will be driven by what technology becomes capable of in the next generation or two.","markups":[]},{"name":"e236","type":1,"text":"As outlined in the introduction, Machine Learning is an extraordinarily ambitious field of research, in which massively complex problems require solving in as accurate and as efficient a way possible. Tasks that come naturally to us humans require innovative solutions when taken on by machines.","markups":[]},{"name":"49ba","type":1,"text":"There’s still plenty of progress to be made, and whoever contributes the next breakthrough idea will no doubt be generously rewarded. Maybe someone reading this article will be behind the next powerful algorithm? All great ideas have to start somewhere!","markups":[]}],"sections":[{"name":"8cd0","startIndex":0}]},"postDisplay":{"coverless":true},"metaDescription":"Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize them by similarity into a number of groups. Done? While there…"},"virtuals":{"statusForCollection":"APPROVED","allowNotes":true,"previewImage":{"imageId":"1*Bm4uiBY1JEt6Z-vOme_fTQ.png","filter":"","backgroundSize":"","originalWidth":1085,"originalHeight":519,"strategy":"resample","height":0,"width":0},"wordCount":4197,"imageCount":8,"readingTime":16.971069182389936,"subtitle":"Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize…","publishedInCount":1,"usersBySocialRecommends":[],"recommends":1493,"socialRecommends":[],"isBookmarked":false,"tags":[{"slug":"machine-learning","name":"Machine Learning","postCount":29634,"virtuals":{"isFollowing":false},"metadata":{"followerCount":23773,"postCount":29634,"coverImage":{"id":"1*QOS8cNI-A61sKwLJ8Nf8Iw.png","originalWidth":1200,"originalHeight":1096}},"type":"Tag"},{"slug":"data-science","name":"Data Science","postCount":19606,"virtuals":{"isFollowing":false},"metadata":{"followerCount":14313,"postCount":19606,"coverImage":{"id":"1*61m9JVlYvpvORj2IUlp-4w.jpeg","originalWidth":1280,"originalHeight":720,"isFeatured":true}},"type":"Tag"},{"slug":"statistics","name":"Statistics","postCount":3629,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1253,"postCount":3629,"coverImage":{"id":"1*jcbUF7dAhAIRS8nfUlNtow.gif","originalWidth":516,"originalHeight":254}},"type":"Tag"},{"slug":"technology","name":"Technology","postCount":117190,"virtuals":{"isFollowing":false},"metadata":{"followerCount":1830699,"postCount":117190,"coverImage":{"id":"1*yH2cmH1uhoFpR7HIseOAsw.jpeg"}},"type":"Tag"},{"slug":"artificial-intelligence","name":"Artificial Intelligence","postCount":42545,"virtuals":{"isFollowing":false},"metadata":{"followerCount":674393,"postCount":42545,"coverImage":{"id":"1*gAn_BSffVBcwCIR6bDgK1g.jpeg"}},"type":"Tag"}],"socialRecommendsCount":0,"responsesCreatedCount":24,"links":{"entries":[],"version":"0.3","generatedAt":1492043253433},"isLockedPreviewOnly":false,"takeoverId":"","metaDescription":"Take a look at the image. It’s a collection of bugs and creepy-crawlies of different shapes and sizes. Take a moment to categorize them by similarity into a number of groups. Done? While there…","totalClapCount":1956,"sectionCount":1,"readingList":0},"coverless":true,"slug":"how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms","translationSourcePostId":"","translationSourceCreatorId":"","isApprovedTranslation":false,"inResponseToPostId":"","inResponseToRemovedAt":0,"isTitleSynthesized":false,"allowResponses":true,"importedUrl":"","importedPublishedAt":0,"visibility":0,"uniqueSlug":"how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba","previewContent":{"bodyModel":{"paragraphs":[{"name":"previewImage","type":4,"text":"","layout":10,"metadata":{"id":"1*Bm4uiBY1JEt6Z-vOme_fTQ.png","originalWidth":1085,"originalHeight":519,"isFeatured":true}},{"name":"0dcc","type":3,"text":"How Machines Make Sense of Big Data: an Introduction to Clustering Algorithms","markups":[],"alignment":1}],"sections":[{"startIndex":0}]},"isFullContent":false},"license":0,"inResponseToMediaResourceId":"","canonicalUrl":"https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba","approvedHomeCollectionId":"336d898217ee","approvedHomeCollection":{"id":"336d898217ee","name":"freeCodeCamp","slug":"free-code-camp","tags":["TECHNOLOGY","DESIGN","TECH","STARTUP","PRODUCTIVITY"],"creatorId":"8b318225c16a","description":"Our community publishes stories worth reading on development, design, and data science.","shortDescription":"Our community publishes stories worth reading on…","image":{"imageId":"1*MotlWcSa2n6FrOx3ul89kw.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":395210,"activeAt":1520335416111},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*wViBNJ1o9rM5p6b-gf3vxg.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"freecodecamp","facebookPageName":"freecodecamp","publicEmail":"quincy@freecodecamp.com","collectionMastheadId":"af94c9c16d4","domain":"medium.freecodecamp.org","sections":[{"type":2,"collectionHeaderMetadata":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":["dbae61681cf0"]}},{"type":1,"postListMetadata":{"source":1,"layout":6,"number":25,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":6,"number":25,"postIds":[],"sectionHeader":"Trending"}}],"tintColor":"#FF006400","lightText":true,"favicon":{"imageId":"1*B6_f-_SxscJ9FCuIjOrQAQ.jpeg","filter":"","backgroundSize":"","originalWidth":657,"originalHeight":654,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF429A35","point":0},{"color":"#FF408F33","point":0.1},{"color":"#FF3E8432","point":0.2},{"color":"#FF3B7830","point":0.3},{"color":"#FF376C2D","point":0.4},{"color":"#FF33602A","point":0.5},{"color":"#FF2E5426","point":0.6},{"color":"#FF284721","point":0.7},{"color":"#FF223A1C","point":0.8},{"color":"#FF1A2C15","point":0.9},{"color":"#FF111E0D","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF006400","point":0},{"color":"#FF2A7920","point":0.1},{"color":"#FF458C39","point":0.2},{"color":"#FF5D9E50","point":0.3},{"color":"#FF74AF66","point":0.4},{"color":"#FF8ABF7C","point":0.5},{"color":"#FFA0CE92","point":0.6},{"color":"#FFB5DDA8","point":0.7},{"color":"#FFCAEBBE","point":0.8},{"color":"#FFDFF8D4","point":0.9},{"color":"#FFF3FFEA","point":1}],"backgroundColor":"#FF006400"},"highlightSpectrum":{"colorPoints":[{"color":"#FFE3FBD9","point":0},{"color":"#FFDEFAD3","point":0.1},{"color":"#FFD9FACC","point":0.2},{"color":"#FFD3F9C6","point":0.3},{"color":"#FFCEF9C0","point":0.4},{"color":"#FFC9F8B9","point":0.5},{"color":"#FFC3F8B3","point":0.6},{"color":"#FFBDF7AD","point":0.7},{"color":"#FFB8F7A6","point":0.8},{"color":"#FFB2F6A0","point":0.9},{"color":"#FFACF699","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Dev","tagSlug":"web-development","url":"https://medium.freecodecamp.org/tagged/web-development","source":"tagSlug"},{"type":1,"title":"Design","tagSlug":"design","url":"https://medium.freecodecamp.org/tagged/design","source":"tagSlug"},{"type":1,"title":"Data","tagSlug":"data-science","url":"https://medium.freecodecamp.org/tagged/data-science","source":"tagSlug"},{"type":3,"title":"Learn to code for free","url":"https://freecodecamp.com?ref=mn"}],"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"googleAnalyticsId":"UA-55446531-3","ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4},"type":"Collection"},"newsletterId":"","webCanonicalUrl":"https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba","mediumUrl":"https://medium.freecodecamp.org/how-machines-make-sense-of-big-data-an-introduction-to-clustering-algorithms-4bd97d4fbaba","migrationId":"","notifyFollowers":true,"notifyTwitter":false,"isSponsored":false,"isRequestToPubDisabled":false,"notifyFacebook":false,"responseHiddenOnParentPostAt":0,"isSeries":false,"isSubscriptionLocked":false,"seriesLastAppendedAt":0,"audioVersionDurationSec":0,"sequenceId":"","isNsfw":false,"isEligibleForRevenue":false,"isBlockedFromHightower":false,"deletedAt":0,"lockedPostSource":0,"hightowerMinimumGuaranteeStartsAt":0,"hightowerMinimumGuaranteeEndsAt":0,"featureLockRequestAcceptedAt":0,"featureLockRequestMinimumGuaranteeAmount":0,"isElevate":false,"mongerRequestType":1,"type":"Post"},"mentionedUsers":[],"collaborators":[],"membershipPlans":[],"collectionUserRelations":[],"mode":null,"references":{"User":{"536515a4b25d":{"userId":"536515a4b25d","name":"Peter Gleeson","username":"petergleeson1","createdAt":1470000206625,"lastPostCreatedAt":1518565199411,"imageId":"1*jYH_43uKbwiZhfXddHE1BQ.jpeg","backgroundImageId":"","bio":"Writer on topics in data science, statistics and programming","twitterScreenName":"","socialStats":{"userId":"536515a4b25d","usersFollowedCount":252,"usersFollowedByCount":4265,"type":"SocialStats"},"social":{"userId":"lo_ORScxfT4HOgt","targetUserId":"536515a4b25d","type":"Social"},"facebookAccountId":"","allowNotes":1,"isNsfw":false,"type":"User"}},"Collection":{"336d898217ee":{"id":"336d898217ee","name":"freeCodeCamp","slug":"free-code-camp","tags":["TECHNOLOGY","DESIGN","TECH","STARTUP","PRODUCTIVITY"],"creatorId":"8b318225c16a","description":"Our community publishes stories worth reading on development, design, and data science.","shortDescription":"Our community publishes stories worth reading on…","image":{"imageId":"1*MotlWcSa2n6FrOx3ul89kw.png","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"metadata":{"followerCount":395210,"activeAt":1520335416111},"virtuals":{"permissions":{"canPublish":false,"canPublishAll":false,"canRepublish":false,"canRemove":false,"canManageAll":false,"canSubmit":false,"canEditPosts":false,"canAddWriters":false,"canViewStats":false,"canSendNewsletter":false,"canViewLockedPosts":false,"canViewCloaked":false,"canEditOwnPosts":false,"canBeAssignedAuthor":false,"canEnrollInHightower":false,"canLockPostsForMediumMembers":false},"isSubscribed":false,"isNewsletterSubscribed":false,"memberOfMembershipPlanId":"","isEnrolledInHightower":false,"isEligibleForHightower":false},"logo":{"imageId":"1*wViBNJ1o9rM5p6b-gf3vxg.png","filter":"","backgroundSize":"","originalWidth":600,"originalHeight":72,"strategy":"resample","height":0,"width":0},"twitterUsername":"freecodecamp","facebookPageName":"freecodecamp","publicEmail":"quincy@freecodecamp.com","collectionMastheadId":"af94c9c16d4","domain":"medium.freecodecamp.org","sections":[{"type":2,"collectionHeaderMetadata":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4}},{"type":1,"postListMetadata":{"source":3,"layout":6,"number":1,"postIds":["dbae61681cf0"]}},{"type":1,"postListMetadata":{"source":1,"layout":6,"number":25,"postIds":[]}},{"type":1,"postListMetadata":{"source":2,"layout":6,"number":25,"postIds":[],"sectionHeader":"Trending"}}],"tintColor":"#FF006400","lightText":true,"favicon":{"imageId":"1*B6_f-_SxscJ9FCuIjOrQAQ.jpeg","filter":"","backgroundSize":"","originalWidth":657,"originalHeight":654,"strategy":"resample","height":0,"width":0},"colorPalette":{"defaultBackgroundSpectrum":{"colorPoints":[{"color":"#FF429A35","point":0},{"color":"#FF408F33","point":0.1},{"color":"#FF3E8432","point":0.2},{"color":"#FF3B7830","point":0.3},{"color":"#FF376C2D","point":0.4},{"color":"#FF33602A","point":0.5},{"color":"#FF2E5426","point":0.6},{"color":"#FF284721","point":0.7},{"color":"#FF223A1C","point":0.8},{"color":"#FF1A2C15","point":0.9},{"color":"#FF111E0D","point":1}],"backgroundColor":"#FFFFFFFF"},"tintBackgroundSpectrum":{"colorPoints":[{"color":"#FF006400","point":0},{"color":"#FF2A7920","point":0.1},{"color":"#FF458C39","point":0.2},{"color":"#FF5D9E50","point":0.3},{"color":"#FF74AF66","point":0.4},{"color":"#FF8ABF7C","point":0.5},{"color":"#FFA0CE92","point":0.6},{"color":"#FFB5DDA8","point":0.7},{"color":"#FFCAEBBE","point":0.8},{"color":"#FFDFF8D4","point":0.9},{"color":"#FFF3FFEA","point":1}],"backgroundColor":"#FF006400"},"highlightSpectrum":{"colorPoints":[{"color":"#FFE3FBD9","point":0},{"color":"#FFDEFAD3","point":0.1},{"color":"#FFD9FACC","point":0.2},{"color":"#FFD3F9C6","point":0.3},{"color":"#FFCEF9C0","point":0.4},{"color":"#FFC9F8B9","point":0.5},{"color":"#FFC3F8B3","point":0.6},{"color":"#FFBDF7AD","point":0.7},{"color":"#FFB8F7A6","point":0.8},{"color":"#FFB2F6A0","point":0.9},{"color":"#FFACF699","point":1}],"backgroundColor":"#FFFFFFFF"}},"navItems":[{"type":1,"title":"Dev","tagSlug":"web-development","url":"https://medium.freecodecamp.org/tagged/web-development","source":"tagSlug"},{"type":1,"title":"Design","tagSlug":"design","url":"https://medium.freecodecamp.org/tagged/design","source":"tagSlug"},{"type":1,"title":"Data","tagSlug":"data-science","url":"https://medium.freecodecamp.org/tagged/data-science","source":"tagSlug"},{"type":3,"title":"Learn to code for free","url":"https://freecodecamp.com?ref=mn"}],"colorBehavior":2,"instantArticlesState":0,"acceleratedMobilePagesState":0,"googleAnalyticsId":"UA-55446531-3","ampLogo":{"imageId":"","filter":"","backgroundSize":"","originalWidth":0,"originalHeight":0,"strategy":"resample","height":0,"width":0},"header":{"backgroundImage":{},"logoImage":{"id":"1*JAG6GC1APQdyo2PegDDi2g@2x.png","originalWidth":601,"originalHeight":81,"alt":"freeCodeCamp"},"alignment":2,"layout":4},"type":"Collection"}},"Social":{"536515a4b25d":{"userId":"lo_ORScxfT4HOgt","targetUserId":"536515a4b25d","type":"Social"}},"SocialStats":{"536515a4b25d":{"userId":"536515a4b25d","usersFollowedCount":252,"usersFollowedByCount":4265,"type":"SocialStats"}}}})
// ]]></script></body></html>